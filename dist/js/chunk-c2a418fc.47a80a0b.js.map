{"version":3,"sources":["webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/components/VDivider/VDivider.ts"],"names":["name","functional","directives","ripple","props","disabled","type","default","value","indeterminate","indeterminateIcon","onIcon","offIcon","render","data","children","h","staticClass","center","icon","VIcon","dark","light","classes","class","on","click","e","f","mixins","inset","Boolean","this","themeClasses","attrs","$listeners","$slots","action","dense","hideSelected","items","itemDisabled","String","Array","itemText","itemValue","noDataText","noFilter","searchInput","selectedItems","computed","parsedItems","map","item","tileActiveClass","Object","setTextColor","staticNoDataTile","tile","role","undefined","mousedown","$createElement","VListItem","genTileContent","methods","genAction","VListItemAction","color","inputValue","input","genDivider","VDivider","genFilteredText","text","getMaskedCharacters","end","start","genHighlight","middle","genHeader","index","genTile","hasItem","getDisabled","id","_uid","activeClass","$scopedSlots","length","parent","scopedSlot","needsTile","innerHTML","getText","VList","domProps","indexOf","getValue","slot","itemsLength","tabindex","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","baseMixins","ClickOutside","appendIcon","attach","cacheItems","chips","clearable","deletableChips","disableLookup","eager","itemColor","menuProps","multiple","openOnClear","returnObject","smallChips","cachedItems","menuIsBooted","isMenuActive","lastItem","lazyValue","selectedIndex","keyboardLookupPrefix","keyboardLookupLastTime","allItems","filterDuplicates","concat","computedItems","computedOwns","computedCounterValue","isFocused","args","closeConditional","dynamicHeight","hasChips","hasSlot","isDirty","listData","scopeId","$vnode","context","$vuetify","lang","t","select","selectItem","scopedSlots","staticList","console","VSelectList","virtualizedItems","$_menuProps","slice","menuCanShow","normalisedProps","split","acc","p","nudgeBottom","watch","internalValue","window","immediate","handler","blur","activateMenu","clearableCallback","getContent","contains","$el","uniqueValues","arr","val","findExistingIndex","i","$refs","menu","genChipSelection","isDisabled","VChip","close","small","key","JSON","genCommaSelection","last","genDefaultSlot","selections","prefix","genAffix","suffix","genIcon","VInput","mergeData","genInput","readonly","autocomplete","keypress","onKeyPress","genHiddenInput","attrs$","genInputSlot","genList","genListWithSlot","slots","slotName","genMenu","VMenu","offsetY","ref","genSelections","genSelection","genSlotSelection","selection","selected","getMenuIndex","onBlur","$emit","onChipInput","setValue","onClick","isAppendInner","onEscDown","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","Math","setTimeout","onKeyDown","keyCode","onUpDown","onTabDown","onSpaceDown","onMenuActiveChange","onMouseUp","hasMouseDown","onScroll","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","listIndex","setMenuIndex","setSelectedItems","values","v","oldValue","appendInner","vertical","$attrs","orientation"],"mappings":"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","file":"js/chunk-c2a418fc.47a80a0b.js","sourcesContent":["import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data }): VNode {\n    const children = []\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    const classes = {\n      'v-simple-checkbox': true,\n      'v-simple-checkbox--disabled': props.disabled,\n    }\n\n    return h('div', {\n      ...data,\n      class: classes,\n      on: {\n        click: (e: MouseEvent) => {\n          e.stopPropagation()\n\n          if (data.on && data.on.input && !props.disabled) {\n            wrapInArray(data.on.input).forEach(f => f(!props.value))\n          }\n        },\n      },\n    }, children)\n  },\n})\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { SelectItemKey } from 'types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: '', middle: text, end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { SelectItemKey } from 'types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    },\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.getText(this.selectedItems[0]) || '').toString().length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: this.blur,\n        args: {\n          closeConditional: this.closeConditional,\n        },\n      } as VNodeDirective] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    menuIsBooted () {\n      window.setTimeout(() => {\n        if (this.getContent() && this.getContent().addEventListener) {\n          this.getContent().addEventListener('scroll', this.onScroll, false)\n        }\n      })\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n\n      if (!val) return\n\n      this.menuIsBooted = true\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        this.disabled ||\n        this.readonly ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : undefined)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.disabled ||\n        this.readonly ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (isDisabled) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.disabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.readonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined, offsetY: true },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: this.disabled || this.readonly,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (this.isDisabled) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        this.readonly ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.readonly) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If menu is not active, up and down can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        !this.isDisabled\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        // If user is clicking in the container\n        // and field is enclosed, activate it\n        } else if (this.isEnclosed) {\n          this.isMenuActive = true\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem >= this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n        keyCodes.up === keyCode ? menu.prevTile() : menu.nextTile()\n        menu.activeTile && menu.activeTile.click()\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n        if (!this.multiple) return\n\n        const listIndex = this.getMenuIndex()\n\n        this.setMenuIndex(-1)\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) return\n\n        this.$nextTick(() => this.setMenuIndex(listIndex))\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      const oldValue = this.internalValue\n      this.internalValue = value\n      value !== oldValue && this.$emit('change', value)\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n","// Styles\nimport './VDivider.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default Themeable.extend({\n  name: 'v-divider',\n\n  props: {\n    inset: Boolean,\n    vertical: Boolean,\n  },\n\n  render (h): VNode {\n    // WAI-ARIA attributes\n    let orientation\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal'\n    }\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses,\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs,\n      },\n      on: this.$listeners,\n    })\n  },\n})\n"],"sourceRoot":""}