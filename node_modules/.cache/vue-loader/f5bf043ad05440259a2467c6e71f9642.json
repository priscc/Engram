{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/components/Barchart.vue?vue&type=style&index=0&id=a9237b4a&scoped=true&lang=css&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/components/Barchart.vue","mtime":1591484511152},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJhci1wb3NpdGl2ZSB7CglmaWxsOiBzdGVlbGJsdWU7Cgl0cmFuc2l0aW9uOiByIDAuMnMgZWFzZS1pbi1vdXQ7Cn0KCi5iYXItcG9zaXRpdmU6aG92ZXIgewoJZmlsbDogYnJvd247Cn0KCi5zdmctY29udGFpbmVyIHsKCWRpc3BsYXk6IGlubGluZS1ibG9jazsKCXBvc2l0aW9uOiByZWxhdGl2ZTsKCXdpZHRoOiAxMDAlOwoJcGFkZGluZy1ib3R0b206IDElOwoJdmVydGljYWwtYWxpZ246IHRvcDsKCW92ZXJmbG93OiBoaWRkZW47Cn0K"},{"version":3,"sources":["Barchart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Barchart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div id=\"container\" class=\"svg-container\" align=\"center\">\n\t\t<h1>{{ title }}</h1>\n\t\t<svg v-if=\"redrawToggle === true\" :width=\"svgWidth\" :height=\"svgHeight\">\n\t\t\t<g>\n\t\t\t\t<rect\n\t\t\t\t\tv-for=\"item in data\"\n\t\t\t\t\tclass=\"bar-positive\"\n\t\t\t\t\t:key=\"item[xKey]\"\n\t\t\t\t\t:x=\"xScale(item[xKey])\"\n\t\t\t\t\t:y=\"yScale(0)\"\n\t\t\t\t\t:width=\"xScale.bandwidth()\"\n\t\t\t\t\t:height=\"0\"\n\t\t\t\t></rect>\n\t\t\t</g>\n\t\t</svg>\n\t</div>\n</template>\n\n<script>\nimport { scaleLinear, scaleBand } from \"d3-scale\";\nimport { max, min } from \"d3-array\";\nimport { selectAll } from \"d3-selection\";\nimport { transition } from \"d3-transition\";\n\nexport default {\n\tname: \"BarChart\",\n\tprops: {\n\t\ttitle: String,\n\t\txKey: String,\n\t\tyKey: String,\n\t\tdata: Array\n\t},\n\tdata: () => ({\n\t\tsvgWidth: 0,\n\t\tredrawToggle: true\n\t}),\n\tmethods: {\n\t\tAnimateLoad() {\n\t\t\tselectAll(\"rect\")\n\t\t\t\t.data(this.data)\n\t\t\t\t.transition()\n\t\t\t\t.delay((d, i) => {\n\t\t\t\t\treturn i * 150;\n\t\t\t\t})\n\t\t\t\t.duration(1000)\n\t\t\t\t.attr(\"y\", d => {\n\t\t\t\t\treturn this.yScale(d[this.yKey]);\n\t\t\t\t})\n\t\t\t\t.attr(\"height\", d => {\n\t\t\t\t\treturn this.svgHeight - this.yScale(d[this.yKey]);\n\t\t\t\t});\n\t\t},\n\t\tAddResizeListener() {\n\t\t\t// redraw the chart 300ms after the window has been resized\n\t\t\twindow.addEventListener(\"resize\", () => {\n\t\t\t\tthis.$data.redrawToggle = false;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.$data.redrawToggle = true;\n\t\t\t\t\tthis.$data.svgWidth =\n\t\t\t\t\t\tdocument.getElementById(\"container\").offsetWidth * 0.75;\n\t\t\t\t\tthis.AnimateLoad();\n\t\t\t\t}, 300);\n\t\t\t});\n\t\t}\n\t},\n\tcomputed: {\n\t\tdataMax() {\n\t\t\treturn max(this.data, d => {\n\t\t\t\treturn d[this.yKey];\n\t\t\t});\n\t\t},\n\t\tdataMin() {\n\t\t\treturn min(this.data, d => {\n\t\t\t\treturn d[this.yKey];\n\t\t\t});\n\t\t},\n\t\txScale() {\n\t\t\treturn scaleBand()\n\t\t\t\t.rangeRound([0, this.svgWidth])\n\t\t\t\t.padding(0.1)\n\t\t\t\t.domain(\n\t\t\t\t\tthis.data.map(d => {\n\t\t\t\t\t\treturn d[this.xKey];\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t},\n\t\tyScale() {\n\t\t\treturn scaleLinear()\n\t\t\t\t.rangeRound([this.svgHeight, 0])\n\t\t\t\t.domain([this.dataMin > 0 ? 0 : this.dataMin, this.dataMax]);\n\t\t},\n\t\tsvgHeight() {\n\t\t\treturn this.svgWidth / 1.61803398875; // golden ratio\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.svgWidth = document.getElementById(\"container\").offsetWidth * 0.75;\n\t\tthis.AddResizeListener();\n\t\tthis.AnimateLoad();\n\t}\n};\n</script>\n\n<style scoped>\n\t.bar-positive {\n\t\tfill: steelblue;\n\t\ttransition: r 0.2s ease-in-out;\n\t}\n\n\t.bar-positive:hover {\n\t\tfill: brown;\n\t}\n\n\t.svg-container {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tpadding-bottom: 1%;\n\t\tvertical-align: top;\n\t\toverflow: hidden;\n\t}\n</style>\n"]}]}