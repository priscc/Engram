{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/views/Adding_Content/AddEvent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/views/Adding_Content/AddEvent.vue","mtime":1594682492886},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhZGRFdmVudHMgZnJvbSAnQC9jb21wb25lbnRzL0NvbnRlbnRfRm9ybXMvRXZlbnRzRm9ybS52dWUnCmltcG9ydCB7IGRiIH0gZnJvbSAnQC9tYWluJwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgYWRkRXZlbnRzCiAgfSwKICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICAvLyBEcm9wIGRvd24KICAgICAgZTE6ICcnLAogICAgICBzdGF0ZXM6IFtdLAogICAgICAvLyBGb3IgdG9nZ2xlIGJhcgogICAgICBib3R0b21OYXY6IDAsCiAgICAgIGl0ZW06IDAsCiAgICAgIGl0ZW1zOiBbCiAgICAgICAgeyB0aXRsZTogJ0V2ZW50cycsIGljb246ICdtZGktY2xvY2stc3RhcnQnIH0sCiAgICAgICAgeyB0aXRsZTogJ1Rlcm1pbm9sb2d5JywgaWNvbjogJ21kaS12aWV3LWRhc2hib2FyZCcgfSwKICAgICAgICB7IHRpdGxlOiAnSGlzdG9yaWNhbCBQZW9wbGUnLCBpY29uOiAnbWRpLWFjY291bnQnIH0KICAgICAgXQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy8gcmVhZFNlYXJjaDogbW91bnRlZCB0byBhZGQgVG9waWNzIHRvIGF1dG8tZmlsbCBzZWFyY2ggbGlzdAogICAgcmVhZFNlYXJjaCAoKSB7CiAgICAgIGNvbnN0IHRvZG9zUmVmID0gZGIuY29sbGVjdGlvbignKlRJTUVfUEVSSU9EUycpCiAgICAgIHRvZG9zUmVmLmdldCgpLnRoZW4oc25hcHNob3QgPT4gewogICAgICAgIHZhciB0b2RvcyA9IFtdCiAgICAgICAgc25hcHNob3QuZm9yRWFjaChkb2MgPT4gewogICAgICAgICAgZG9jLmRhdGEoKS50b3BpY3MuZm9yRWFjaChpID0+IHsKICAgICAgICAgICAgdG9kb3MucHVzaChpLnRvcGljVGl0bGUpCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICAgICAgdGhpcy5zdGF0ZXMgPSB0b2RvcwogICAgICB9KQogICAgfQogIH0sCiAgbW91bnRlZCAoKSB7CiAgICB0aGlzLnJlYWRTZWFyY2goKQogIH0KfQo="},{"version":3,"sources":["AddEvent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddEvent.vue","sourceRoot":"src/views/Adding_Content","sourcesContent":["<template>\n<div id=\"app\">\n\t<v-container fluid style=\"padding-left: 10%; padding-right: 10%;\">\n\t\t<!-- DROP DOWN select topic menu -->\n    <v-row>\n      <v-col>\n          <p class=\"pt-5 display-2\">Add Events</p>\n          <h3 class=\"pt-5\">Select a topic</h3>\n      </v-col>\n    </v-row>\n    <v-row class=\"mb-6\">\n\t\t\t<v-col>\n\t\t\t\t<v-select v-model=\"e1\" :items=\"states\" menu-props=\"auto\" label=\"Topics\" hide-details single-line ripple></v-select>\n\t\t\t</v-col>\n\t\t</v-row>\n\t\t<v-row>\n\t\t\t<v-col>\n\t\t\t\t\t<add-events :topicSelected=\"e1\"></add-events>\n\t\t\t</v-col>\n\t\t</v-row>\n\t</v-container>\n</div>\n</template>\n\n<script>\nimport addEvents from '@/components/Content_Forms/EventsForm.vue'\nimport { db } from '@/main'\nexport default {\n  components: {\n    addEvents\n  },\n  data: function () {\n    return {\n      // Drop down\n      e1: '',\n      states: [],\n      // For toggle bar\n      bottomNav: 0,\n      item: 0,\n      items: [\n        { title: 'Events', icon: 'mdi-clock-start' },\n        { title: 'Terminology', icon: 'mdi-view-dashboard' },\n        { title: 'Historical People', icon: 'mdi-account' }\n      ]\n    }\n  },\n  methods: {\n    // readSearch: mounted to add Topics to auto-fill search list\n    readSearch () {\n      const todosRef = db.collection('*TIME_PERIODS')\n      todosRef.get().then(snapshot => {\n        var todos = []\n        snapshot.forEach(doc => {\n          doc.data().topics.forEach(i => {\n            todos.push(i.topicTitle)\n          })\n        })\n        this.states = todos\n      })\n    }\n  },\n  mounted () {\n    this.readSearch()\n  }\n}\n</script>\n"]}]}