{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/components/PresentTimelineTemplate.vue?vue&type=style&index=0&id=3050bf2d&scoped=true&lang=css&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/components/PresentTimelineTemplate.vue","mtime":1598036189937},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jYXJkQ29sb3J7Cglib3JkZXItcmFkaXVzOiA1MHB4OwoJYmFja2dyb3VuZC1jb2xvcjogI0ZCOEMwMAp9Cg=="},{"version":3,"sources":["PresentTimelineTemplate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;AACA;AACA;AACA","file":"PresentTimelineTemplate.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n\n\t<div class=\"d-flex flex-row\"  style=\"border-top: .5px solid #607D8B; position: relative;\">\n\t\t\n\t\t<!-- ticks -->\n\t\t<div\n\t\t\tv-for=\"i in ticks +1\"\n\t\t\tstyle=\"border-left: 2px solid #607D8B;  position: absolute; top: -7px; height: 15px\"\n\t\t\tv-bind:style=\"{ left: (( ( (i-1)*(tickSize) )*100) /total) + '%' }\"\n\t\t\t>\n\t\t</div>\n\n\n\t\t<!-- dates -->\n\t\t<div\n\t\t\tv-for=\"i in ticks +1\"\n\t\t\tstyle=\"position: absolute; top: 10px; height: 15px; font-size: 12px;\"\n\t\t\tv-bind:style=\"{ left: (( ( (i-1)*(tickSize) )*100) /total) - 1 + '%' }\"\n\t\t\t>\n\t\t\t{{ minDate + ((i-1)*tickSize) }}\n\t\t</div>\n\t\t\n\n\t\t<!-- events -->\n\t\t<p class=\"ma-0 font-weight-medium font-italic\"\n\t\tstyle=\"font-size: 14px; position: absolute; top: -35px;\"\n\t\tv-bind:style=\"{ left: start + '%' }\"\n\t\t>{{topicTitle}}</p>\n\t\t<div>\n\t\t\t<!-- <v-hover\n\t\t\tv-slot:default=\"{ hover }\" \n\t\t\tclass=\"px-2\"\n\t\t\tstyle=\"position: absolute; top: -5px; color: white;\"\n\t\t\tv-bind:style=\"{ left: start + '%' }\">\n\t\t\t:elevation=\"hover ? 15 : 10\" -->\n\t\t\t\t<v-card \n\t\t\t\ttile\n\t\t\t\tclass=\"cardColor d-flex justify-center align-center\"\n\t\t\t\t:width=\"width\"\n\t\t\t\tstyle=\"position: absolute; top: -7px; font-size: 10px; height: 15px\"\n\t\t\t\tv-bind:style=\"{ left: start + '%' }\"\n\t\t\t\t> \n\t\t\t\t\t<p v-if=\"hover\" class=\"pa-0 ma-0 caption font-weight-medium\">Expand</p>\n\t\t\t\t</v-card>\n\n\t\t\t<!-- @click=\"timeline = true\"\n\t\t\t</v-hover> -->\n\t\t</div>\n\n\n\t</div>\n</div>\n\t\n</template>\n\n\n<script>\nimport store from \"@/store\";\n\nexport default {\n\tprops:{\n\t\tevents: Array,\n\t\ttopicTitle: String\n\t},\n\tdata () { return {\n\t\teventColors: this.$props.events,\n\t\tprevHover: 1,\n\t\thover: null, \n\t\tdates:[],\n\t\tticks: 0,\n\t\ttickSize: 0,\n\t\tmaxDate: 0,\n\t\tminDate: 0,\n\t\ttotal: 0,\n\n\t\twidth: 0,\n\t\tstart: 0,\n\n\n\t}},\n\tcomputed: {\t\n\t\ttimeline: {\n\t        get () { return store.state.timeline },\n\t        set (value) { store.dispatch(\"eventTimeline\", value) }\n\t    }\n\t},\n\tmethods:{\n\n\t\tcalculatingDates () {\n\n\t\t\tvar ev = this.$props.events\n\t\t\t\n\t\t\tvar max = Math.max.apply(null, ev.map( d => { return d.date }));\n\t\t\tvar min = Math.min.apply(null, ev.map( d => { return d.date }));\n\t\t\t\n\t\t\tthis.maxDate = new Date().getFullYear(); \n\t\t\tthis.minDate = 1000\n\n\t\t\tvar total = this.total = this.maxDate - this.minDate\n\n\t\t\tthis.start = 100 - (((this.maxDate-min)/total) * 100)\n\t\t\tthis.width = ( max - min )\n\n\t\t\tthis.ticks = 10\n\t\t\tthis.tickSize = 100\n\t\t\t\n\t\t}\n\t\t\t\n\t},\n\tmounted(){\n\t\tthis.calculatingDates()\n\t}\n}\n\n</script>\n\n<style type=\"text/css\" scoped>\n\t.cardColor{\n\t\tborder-radius: 50px;\n\t\tbackground-color: #FB8C00\n\t}\n</style>\n"]}]}