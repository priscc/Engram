{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/components/Events/EventTemplate.vue?vue&type=style&index=0&id=6c5f1bce&scoped=true&lang=css&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/components/Events/EventTemplate.vue","mtime":1594349991735},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJveCBwIHsKICBkaXNwbGF5OiAtd2Via2l0LWJveDsKICAtd2Via2l0LWxpbmUtY2xhbXA6IDM7CiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDsgIAogIG92ZXJmbG93OiBoaWRkZW47Cn0KCiAgLmZhZGUtZW50ZXItYWN0aXZlLCAuZmFkZS1sZWF2ZS1hY3RpdmUgewogIHRyYW5zaXRpb246IG9wYWNpdHkgLjhzOwogIH0KICAuZmFkZS1lbnRlciwgLmZhZGUtbGVhdmUtdG8gLyogLmZhZGUtbGVhdmUtYWN0aXZlIGJlbG93IHZlcnNpb24gMi4xLjggKi8gewogICAgb3BhY2l0eTogMDsKICB9CgogIHVsewogICAgbWFyZ2luLWxlZnQ6IDEwJTsKICB9CgkudGltZWxpbmV7CgkJYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CgkJb3BhY2l0eTogMTsKCQl6LWluZGV4OiAxMDsKCX0KCWRpdi50b29sdGlwIHsKCSAgICBwb3NpdGlvbjogYWJzb2x1dGU7CgkgICAgdGV4dC1hbGlnbjogY2VudGVyOwoJICAgIHBhZGRpbmc6IDVweDsKCSAgICBmb250OiAxMnB4IHNhbnMtc2VyaWY7CgkgICAgYmFja2dyb3VuZDogbGlnaHRzdGVlbGJsdWU7CgkgICAgYm9yZGVyOiAwcHg7CgkgICAgYm9yZGVyLXJhZGl1czogOHB4OwoJICAgIHBvaW50ZXItZXZlbnRzOiBub25lOwoJfQoJLmF4aXMgcGF0aCwgLmF4aXMgbGluZSB7CgkJZmlsbDogbm9uZTsKCQlzdHJva2U6IGJsYWNrOwogICAgc3Ryb2tlLXdpZHRoOiAxLjVweDsKCQlzaGFwZS1yZW5kZXJpbmc6IGNyaXNwRWRnZXM7Cgl9CgkuYXhpcyB0ZXh0IHsKCQlmb250LWZhbWlseTogc2Fucy1zZXJpZjsKCQlmb250LXNpemU6IDEycHg7Cgl9CgkudGltZWxpbmUtbGFiZWwgewoJCWZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwoJfQoJI3RpbWVsaW5lIC5heGlzIHsKCQkvKnRyYW5zZm9ybTogdHJhbnNsYXRlKDBweCw0MHB4KTsqLwoJCS1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZSgwcHgsNDBweCk7IC8qIElFIDkgKi8KCQktd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKDBweCw0MHB4KTsgLyogU2FmYXJpIGFuZCBDaHJvbWUgKi8KCQktby10cmFuc2Zvcm06IHRyYW5zbGF0ZSgwcHgsNDBweCk7IC8qIE9wZXJhICovCgkJLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZSgwcHgsNDBweCk7IC8qIEZpcmVmb3ggKi8KCX0KCS5jb2xvcmVkRGl2IHsKCQloZWlnaHQ6IDIwcHg7CgkJd2lkdGg6IDIwcHg7CgkJZmxvYXQ6IGxlZnQ7Cgl9Cgo="},{"version":3,"sources":["EventTemplate.vue"],"names":[],"mappingseA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EventTemplate.vue","sourceRoot":"src/components/Events","sourcesContent":["<template>\n\t<v-col class=\"pl-7\">\n    \n    <!-- *** HEADER -->\n    <v-row class=\"text-center\">\n      <v-col class=\"pt-0\">\n        <h2 class=\"font-weight-light\">Events of the {{header}}</h2>\n      </v-col>\n    </v-row>\n    \n\n\n    <!-- *** NARRATIVE -->\n    <!-- <div class=\"overflow-hidden\">\n      <v-bottom-navigation style=\" border-top: 1px solid #424242\" v-model=\"bottomNav\" :color=\"color\">\n        <v-btn>\n          <span @click=\"color = 'red'\">All</span>\n          <v-icon>mdi-history</v-icon>\n        </v-btn>\n        <v-btn @click=\"color = 'purple'\">\n          <span>Causes</span>\n          <v-icon>mdi-history</v-icon>\n        </v-btn>\n        <v-btn @click=\"color = 'blue'\">\n          <span>Turning Points</span>\n          <v-icon>mdi-heart</v-icon>\n        </v-btn>\n        <v-btn @click=\"color = 'green'\">\n          <span>Results/Effects</span>\n          <v-icon>mdi-map-marker</v-icon>\n        </v-btn>\n      </v-bottom-navigation>\n    </div> -->\n     \n     <v-tabs v-model=\"bottomNav\" style=\" border-top: 1px solid #424242\" background-color=\"white\" :color=\"color\" right >\n      <v-tab @click=\"color = 'red'\">All</v-tab>\n      <v-tab @click=\"color = 'purple'\">Causes</v-tab>\n      <v-tab @click=\"color = 'blue'\">Turning Points</v-tab>\n      <v-tab @click=\"color = 'green'\"> Effects</v-tab>\n    </v-tabs>\n\n\t\t<!-- ***TIMELINE -->\n    <v-row class=\"timeline pt-6\"> <!-- style=\"background-color: transparent; border-top: .5px dashed lightgrey\" -->\n\t\t\t<v-col class=\"my-auto\">\n\t\t\t\t<div id=\"timeline2\"></div>\n\t\t\t\t<div id=\"timeline\"></div>\n\t\t\t</v-col>\n\t\t</v-row>\n\n    <!-- *** CONTENT -->\n    <transition name=\"fade\">\n      <v-row v-if=\"content != ''\">\n        <v-spacer></v-spacer>\n        <v-col cols=\"9\">\n        <v-card color=\"teal lighten-5\">\n            <div class=\"d-flex flex-no-wrap\">\n              <v-avatar class=\"ma-3\"tile size=\"125\">\n                <v-img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT-ILL4LOZYbDF3-j7toq45fCjtR6RnsOr6TerzjUGBAUXfsjAz&usqp=CAU\"></v-img>\n              </v-avatar>\n              <div style=\"width: 80%\">\n                <v-card-title class=\"headline\"> {{Descheader}}</v-card-title>\n                <v-card-subtitle>{{date}}</v-card-subtitle>\n\n                <v-card-text class=\"text-truncate text-wrap\" style=\"max-width: 400px\">{{content}}</v-card-text>\n                <v-card-text class=\"pb-0 font-weight-bold\">Role in the {{header}}\"</v-card-text>\n                <v-card-text class=\"ml-3\">small explaination .....................</v-card-text>\n                \n                <v-card-actions>\n                  <v-btn color=\"orange\" text outlined> Read More </v-btn>\n                </v-card-actions>\n              </div> \n              <div class=\"pa-4 d-flex align-start\" >\n                <v-btn icon @click=\"content = ''\" opacity=\".5\" outlined>\n                          <v-icon>mdi-close</v-icon>\n                </v-btn>\n              </div> \n            </div>\n            \n          </v-card>\n        </v-col>\n        <v-spacer></v-spacer>\n      </v-row>\n    </transition>\n\n\t</v-col>\n</template>\n\n<script>\nimport eventCol from '@/components/Events/EventColumn.vue'\nimport { db } from '@/main'\nimport * as d3 from 'd3'\n\nexport default {\n  name: 'Topics',\n  props: {\n    causes: Array,\n    turningP: Array,\n    effects: Array,\n    header: String\n  },\n  components: {\n    eventCol\n  },\n  data () {\n    return {\n      color: \"red\",\n      bottomNav: 0,\n      prvCircle: null,\n      cause: false,\n        causeDis: \"none\",\n      tp: false,\n        tpDis: \"none\",\n      effect: false,\n        effectDis: \"none\",\n\t  \tid: this.$route.params.id,\n\t  \textend: false,\n\t  \tshowBtn: false,\n\t  \tbtntext: 'mdi-chevron-down',\n\t  \ttime: [\n        { times: [ ] }\n      ],\n      Descheader: \"Hover mouse over number on timeline\",\n      content: \"\",\n      date: \"\",\n\n      data: {},\n      Width: null,\n      svg: null, // #timeline\n      chart: null, // timeline axis\n      g: null,\n      tool: null,\n      margin: { top: 20, right: 50, bottom: 20, left: 10 }\n    }\n  },\n  methods: {\n\n    async pullData () {\n      // var h = header.replace(/\\s+/g, '').toLowerCase()\n      const todosRef = db.collection(this.id).doc('Events')\n\n      var x = await todosRef.get().then(function (doc) {\n        var times = []\n        doc.data().events.forEach(doc => {\n          var x = {}\n          x.start = doc.date.slice(0, 4)\n          x.date = doc.date.slice(0, 4)\n          x.end = doc.date.slice(0, 4)\n          x.label = doc.badge.toString()\n          x.name = doc.eventTitle\n          x.type = doc.eventType\n          x.content = doc.content\n          x.color = '#FF0000'\n          // x.border = ''\n          times.push(x)\n        })\n        return times\n      })\n      this.time[0].times = x\n      this.myFunction()\n    },\n\n///////////////\n// TIMELINE //\n//////////////\n\n    //myFunction: calls timeline\n    myFunction () {\n      this.datA(this.time)\n      var svg = d3.select('#timeline')\n      this.timeline(svg)\n\n      this.time[0].times.forEach(doc =>{\n        console.log(doc)\n        document.getElementById('circle' + doc.label).style.elevation = \"above\"\n        // var x = document.getElementsByClassName('text' + this.prvCircle)\n        // x[0].style.fontWeight = \"normal\"\n        // x[1].style.fontWeight = \"normal\"\n      })\n\n    },\n\n    // datA: formats timeline date data, parse to start and end dates, find min and max date\n    datA (items) {\n      // grabbing data\n      var items = items[0].times\n\n      var today = new Date()\n\n      // copying data to dictionary\n      this.data.items = items\n      // forEach: parse String data to dates & clean end dates\n      this.data.items.forEach(function (item) {\n        item.start = d3.time.format('%Y').parse(item.start)\n        if (item.end == '') { // if has no end time\n          item.end = new Date(item.start.getTime() + instantOffset)\n          item.instant = true\n        } else {\n          item.end = d3.time.format('%Y').parse(item.end)\n          item.instant = false\n        }\n        // prevent timeline from going into the future\n        if (item.end > today) { item.end = today };\n      })\n      // find min and max date\n      this.data.minDate = d3.min(this.data.items, function (d) { return d.start })\n      this.data.maxDate = d3.max(this.data.items, function (d) { return d.end })\n    },\n\n    // timeline: sets svg dimension, (creates svg tag layout) adds circles then adds timeline axis\n    timeline (gParent) {\n\n      // gets svg of <div #timeline>, sets dimensions\n      var div = gParent[0][0]\n\n      // cal svg elements\n      var outerWidth = div.getBoundingClientRect().width\n      \n      var outerHeight = 150\n      var width = outerWidth - this.margin.left - this.margin.right\n      var height = outerHeight - this.margin.top - this.margin.bottom\n      this.Width = width\n\n\n      var svg = d3.select(div)\n        .append('svg')\n        .attr('overflow-x', \"scroll\")\n        .attr(\"width\", \"100%\")\n        .attr(\"height\", outerHeight)\n\n      // Define the div for the tooltip\n      this.tool = d3.select('#timeline2').append('div')\n        .attr('width', '100%')\n        .attr('height', '100%')\n        .attr('class', 'tooltip')\n        .style('opacity', 0)\n\n      // append g element for circles and timeline axis (chart)\n      var g = svg.append('g')\n        .attr('transform', 'translate(' + this.margin.left + ',' + (  this.margin.top + 20 ) + ')')\n      this.DrawCircles(g)\n\n      // appends nested g for timeline axis\n      var chart = g.append('g')\n        .attr('class', 'chart')\n        .attr('clip-path', 'url(#chart-area)')\n      this.xAxis(chart, svg)\n    },\n\n    DrawCircles (g) {\n      // used for positioning\n      var scaleFactor = (1 / (this.data.maxDate - this.data.minDate)) * (this.Width - this.margin.left - this.margin.right)\n      var itemHeight = 20; var itemMargin = 5\n      var Circledata = this.data.items\n\n      // issue warning about using id per data set. Ids should be individual to data elements\n      if (typeof (this.data.id) !== 'undefined') {\n        console.warn(\"d3Timeline Warning: Ids per dataset is deprecated in favor of a 'class' key. Ids are now per data element.\")\n      }\n\n\n      // circles\n      g.selectAll('svg').data(Circledata).enter()\n        .append('circle')\n        .attr('class', 'circle')\n        .attr('id', function (d) { return ('circle' + d.label) })\n        .on('mouseover', this.mouseover.bind(this))\n        .on('mouseout', this.mouseout.bind(this))\n      // for each stacked rect (contains track of circles)\n        .attr('x', getXPos.bind(this))\n        .attr('y', getYPos.bind(this))\n        .attr('width', function (d, i) { return (d.end - d.start) * 0.5 })\n      // circles\n        .attr('cy', getYPos.bind(this))\n        .attr('cx', getXPos.bind(this))\n        .attr('r', itemHeight / 1.8)\n        .attr('height', itemHeight)\n        .attr('fill', function (d, i) { return d.color });\n      \n        //appending div\n        // g.selectAll('svg').data(Circledata).enter()\n        //   .append('div')\n        //   .attr('height', \"10px\")\n        //   .attr('width', \"10px\")\n\n\n      //Rotated\n      g.selectAll('svg').data(Circledata).enter()\n        .append('text')\n        .attr('class', function (d) { return ('text' + d.label) })\n        .classed('trend-type', true)\n        .style(\"text-anchor\", \"start\")\n        .attr(\"transform\", function (d){\n          var x = this.margin.left + (d.start - this.data.minDate) * scaleFactor + 10\n          var y = this.margin.top + (itemHeight + itemMargin) * scaleFactor - 10\n          // \"translate(300,150) rotate(10)\"\n          return \"translate(\" + x + \",\" + y + \") rotate(-10)\"\n        }.bind(this))\n        .style('font-size', \"12px\")\n        .style('fill', 'black')\n        .text(function (d){ return d.name });\n\n          \n      // circle text\n      g.selectAll('svg').data(Circledata).enter()\n        .append('text')\n        .attr('class', function (d) { return ('text' + d.label) })\n        .on('mouseover', this.mouseover.bind(this))\n        .on('mouseout', this.mouseout.bind(this))\n        .attr('x', function (d) {\n          var result = this.margin.left + (d.start - this.data.minDate) * scaleFactor\n          if (parseInt(d.label) > 9) result = result - 9\n          else result = result - 4.5\n          return result\n        }.bind(this))\n        .attr('y', function (d) {\n          var result = this.margin.top + (itemHeight + itemMargin) * scaleFactor\n          result = result + 5\n          return result\n        }.bind(this))\n        .text(function (d) { return d.label })\n        .style('fill', 'white')\n\n      // functions called by attributes\n      function getYPos (d, i, text) {\n        var result = this.margin.top + (itemHeight + itemMargin) * scaleFactor\n        if (text) { result = result + 15 };\n        return result\n      }\n      function getXPos (d, i, text) {\n        var result = this.margin.left + (d.start - this.data.minDate) * scaleFactor\n        if (text) { result = result - 4.5 };\n        return result\n      }\n    },\n\n    tooltip(d){\n      console.log(d)\n      // d3.select('#timeline2').append('div')\n      //   .attr('width', '10px')\n      //   .attr('height', '10px')\n      //   .attr('class', 'tooltip')\n      //   .style('opacity', 1)\n      //   .text(d.name)\n      //   .style('fill', 'black')\n        // .style('left', (d3.event.pageX) + 'px')\n        // .style('top', (d3.event.pageY - 105) + 'px')\n    },\n\n    // Create Event Handlers for mouse\n    mouseover (d) {\n      \n      if (this.prvCircle != null){\n        document.getElementById('circle' + this.prvCircle).style.stroke = ''\n        var x = document.getElementsByClassName('text' + this.prvCircle)\n        x[0].style.fontWeight = \"normal\"\n        x[1].style.fontWeight = \"normal\"\n      } \n      \n      var newCircle = document.getElementById('circle' + d.label)\n        newCircle.style.stroke = '#263238'\n        newCircle.style.strokeWidth = '1.8'\n      \n      var x = document.getElementsByClassName('text' + d.label)\n          x[0].style.fontWeight = \"bold\"\n          x[0].style.fill = \"#37474F\"\n          x[1].style.fontWeight = \"bold\"\n      \n      this.Descheader = d.name\n      this.content = d.content\n      this.date = d.date\n    },\n\n    mouseout (d) {\n      this.prvCircle = d.label\n    },\n\n    // xAxis: create axis and axis year intervals\n    xAxis (chart, svg) {\n      // create axis intervals\n      var xScale = d3.time.scale()\n        .domain([this.data.minDate, this.data.maxDate])\n        .range([0, this.Width])\n      // add ticks with year format\n      var axis = d3.svg.axis()\n        .scale(xScale)\n        .orient('bottom')\n        .tickSize(6, 0)\n        .tickFormat(function (d) { return d.getUTCFullYear() })\n      // call and dislay axis\n      var xAxis = chart.append('g')\n        .attr('class', 'axis')\n        .call(axis)\n      return timeline\n    }\n\n  },\n  watch: {\n    bottomNav: function () {\n      this.time[0].times.forEach(doc => {\n        var num = doc.label\n        var circle = document.getElementById('circle' + num)\n        //all\n        if (this.bottomNav == 0){\n          circle.style.transitionDelay = 'all 2s'\n          circle.style.fill = \"#FF0000\"  // *** PURPLE\n        }\n        //Cause\n        else if (doc.type == \"Cause\" && this.bottomNav == 1){\n          circle.style.transitionDelay = 'all 2s'\n          circle.style.fill = \"#B388FF\"  // *** PURPLE\n          this.causeDis = \"block\"\n        }\n        else if (doc.type == \"Cause\" && this.bottomNav != 1){\n          circle.style.fill = \"#FF0000\"\n          this.causeDis = \"none\"\n        }\n        //TP\n        else if (doc.type == \"Turning Points\" && this.bottomNav == 2){\n          circle.style.transitionDelay = 'all 2s'\n          circle.style.fill = \"#81D4FA\" // *** BLUE\n          this.tpDis = \"block\"\n        } \n        else if ( doc.type == \"Turning Points\" && this.bottomNav != 2){\n          circle.style.fill = \"#FF0000\" \n          this.tpDis = \"none\"\n        }\n        //Effects\n        if (doc.type == \"Effect\" && this.bottomNav == 3){\n          circle.style.transitionDelay = 'all 2s'\n          circle.style.fill = \"#AED581\" // *** GREEN\n          this.effectDis = \"block\"\n        } \n        else if (doc.type == \"Effect\" && this.bottomNav != 3){\n          circle.style.fill = \"#FF0000\"\n          this.effectDis = \"none\"\n        }\n\n\n      })\n    },\n    //unused\n      // cause: function () {\n      //   this.time[0].times.forEach(doc => {\n      //     var num = doc.label\n      //     var circle = document.getElementById('circle' + num)\n      //     else if (doc.type == \"Cause\" && this.cause == true){\n      //       circle.style.transitionDelay = 'all 2s'\n      //       circle.style.fill = \"#B388FF\"  // *** PURPLE\n      //       this.causeDis = \"block\"\n      //     } \n      //     else if (doc.type == \"Cause\" && this.cause == false){\n      //       circle.style.fill = \"#FF0000\"\n      //       this.causeDis = \"none\"\n      //     }\n      //   })\n      // },\n      // tp: function () {\n      //   this.time[0].times.forEach(doc => {\n      //     var num = doc.label\n      //     var circle = document.getElementById('circle' + num)\n      //     if (doc.type == \"Turning Points\" && this.tp == true){\n      //       circle.style.transitionDelay = 'all 2s'\n      //       circle.style.fill = \"#81D4FA\" // *** BLUE\n      //       this.tpDis = \"block\"\n      //     } \n      //     else if ( doc.type == \"Turning Points\" && this.tp == false){\n      //       circle.style.fill = \"#FF0000\" \n      //       this.tpDis = \"none\"\n      //     }\n      //   })\n      // },\n    effect: function () {\n      this.time[0].times.forEach(doc => {\n        var num = doc.label\n        var circle = document.getElementById('circle' + num)\n        if (doc.type == \"Effect\" && this.effect == true){\n          circle.style.transitionDelay = 'all 2s'\n          circle.style.fill = \"#AED581\" // *** GREEN\n          this.effectDis = \"block\"\n        } \n        else if (doc.type == \"Effect\" && this.effect == false){\n          circle.style.fill = \"#FF0000\"\n          this.effectDis = \"none\"\n        }\n      })\n    }\n     \n  },\n  mounted () {\n    this.pullData()\n  }\n}\n</script>\n\n<style scoped>\n.box p {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;  \n  overflow: hidden;\n}\n\n  .fade-enter-active, .fade-leave-active {\n  transition: opacity .8s;\n  }\n  .fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n    opacity: 0;\n  }\n\n  ul{\n    margin-left: 10%;\n  }\n\t.timeline{\n\t\tbackground-color: white;\n\t\topacity: 1;\n\t\tz-index: 10;\n\t}\n\tdiv.tooltip {\n\t    position: absolute;\n\t    text-align: center;\n\t    padding: 5px;\n\t    font: 12px sans-serif;\n\t    background: lightsteelblue;\n\t    border: 0px;\n\t    border-radius: 8px;\n\t    pointer-events: none;\n\t}\n\t.axis path, .axis line {\n\t\tfill: none;\n\t\tstroke: black;\n    stroke-width: 1.5px;\n\t\tshape-rendering: crispEdges;\n\t}\n\t.axis text {\n\t\tfont-family: sans-serif;\n\t\tfont-size: 12px;\n\t}\n\t.timeline-label {\n\t\tfont-family: sans-serif;\n\t}\n\t#timeline .axis {\n\t\t/*transform: translate(0px,40px);*/\n\t\t-ms-transform: translate(0px,40px); /* IE 9 */\n\t\t-webkit-transform: translate(0px,40px); /* Safari and Chrome */\n\t\t-o-transform: translate(0px,40px); /* Opera */\n\t\t-moz-transform: translate(0px,40px); /* Firefox */\n\t}\n\t.coloredDiv {\n\t\theight: 20px;\n\t\twidth: 20px;\n\t\tfloat: left;\n\t}\n\n</style>\n"]}]}