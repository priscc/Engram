{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/views/other_pages/testerComp.vue?vue&type=style&index=0&id=41ef6382&scoped=true&lang=css&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/views/other_pages/testerComp.vue","mtime":1593324146775},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5ldmVudFRleHR7Cglmb250LXNpemU6IDEycHg7Cn0K"},{"version":3,"sources":["testerComp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkOA;AACA;AACA","file":"testerComp.vue","sourceRoot":"src/views/other_pages","sourcesContent":["<template>\n\t\n\t<div id=\"app\">\n\t\t<v-row style=\"border: 1px solid black\">\n\t\t<v-col>\n\t\t\t{{time}}\n\t\t\t<div id=\"myClass\"></div>\n\t\t\t<div id=\"timeline2\"></div>\n\t\t\t<div id=\"timeline\"></div>\n\t\t</v-col>\n\t</v-row>\n\t</div>\n\t\t\t\n</template>\n\n<script>\nimport testerComp from '@/views/other_pages/testertestComp.vue'\n\nexport default {\n\tprops: {\n\t\ttime: Array\n\t},\n\n\tcomponents:{\n\t\ttesterComp\n\t},\n\tdata: function () {\n\t\treturn {\n\t\t\t\n\t\t\t// time: this.time,\n\t\t\tdata: {}, \n\t\t\tWidth: null, \n\t\t\tsvg: null, //#timeline\n\t\t\tchart: null, //timeline axis\n\t\t\tg: null,\n\t\t\ttool: null,\n\t\t\tmargin: {top: 20, right: 20, bottom: 20, left: 20}\n\n\t\t}\n\t},\n\tmethod:{\n\t\tmyFunction(){\n\t\t\t\n\t\t\tthis.datA(time);\n\n\t\t\tvar svg = d3.select(\"#timeline\") \n\t\t\t\t.append(\"svg\")\n\t\t\t\n\t\t\tthis.timeline(svg);\n\n\t\t\t// var div = d3.select(\"#myClass\").append(\"svg\").append(\"rect\");\n\t\t\t// var i = 1\n\t\t\t// div .attr(\"height\", \"20\")\n\t\t\t// \t.attr(\"width\", \"100\")\n\t\t\t// \t.attr(\"fill\", \"blue\")\n\t\t\t// \t.on(\"mouseover\", function(){\n\t\t\t// \t\tthis.accessingChildComp2[i].moreStyles.border = \"2px solid black\"\n\t\t\t// \t}.bind(this))\n\t\t\t// \t.on(\"mouseout\", function(){\n\t\t\t\t\t\n\t\t\t// \t\tthis.accessingChildComp2[i].moreStyles.border = \"1px solid lightgrey\"\n\t\t\t// \t}.bind(this));\n\t\t\t\n\t\t},\n\t\t\n\t\t//datA: formats timeline date data, parse to start and end dates, find min and max date\n\t\tdatA(items) {\n\t\t\t//grabbing data\n\t\t\tvar items = items[0].times;\n\n\t\t\tvar today = new Date();\n\n\t\t\t//copying data to dictionary\n\t\t\tthis.data.items = items;\n\t\t\t// forEach: parse String data to dates & clean end dates\n\t\t\tthis.data.items.forEach(function (item){\n\t\t\t\titem.start  = d3.time.format(\"%Y\").parse(item.start);\n\t\t\t\tif (item.end == \"\") { //if has no end time\n\t\t\t\t\titem.end = new Date(item.start.getTime() + instantOffset);\n\t\t\t\t\titem.instant = true;\n\t\t\t\t} else {\n\t\t\t\t\titem.end = d3.time.format(\"%Y\").parse(item.end);\n\t\t\t\t\titem.instant = false;\n\t\t\t\t}\n\t\t\t\t//prevent timeline from going into the future\n\t\t\t\tif (item.end > today) { item.end = today};\n\t\t\t});\n\t\t\t//find min and max date\n\t\t\tthis.data.minDate = d3.min(this.data.items, function (d) { return d.start; });\n\t\t\tthis.data.maxDate = d3.max(this.data.items, function (d) { return d.end; });\n\n\t\t},\n\n\t\t//timeline: sets svg dimension, (creates svg tag layout) adds circles then adds timeline axis\n\t\ttimeline (gParent) {\n\t\t\t\n\t\t\t//cal svg elements\n\t\t\tvar outerWidth = 700;\n\t\t\tvar outerHeight = 100,\n\t\t\t\twidth = outerWidth - this.margin.left - this.margin.right,\n\t\t\t\theight = outerHeight - this.margin.top - this.margin.bottom;\n\t\t\tthis.Width = width;\n\t\t\t\n\t\t\t//gets svg of <div #timeline>, sets dimensions\n\t\t\tvar div = gParent[0][0]\n\t\t\tconsole.log(div)\n\t\t\tvar svg = d3.select(div)\n\t\t\t\t.attr(\"width\", \"100%\")\n\t\t\t\t.attr(\"height\", outerHeight);\n\n\t\t\t// Define the div for the tooltip\n\t\t\tthis.tool = d3.select(\"#timeline2\").append(\"div\")\t\n\t\t\t\t.attr(\"width\", \"100%\")\n\t\t\t\t.attr(\"height\", \"100%\")\n\t\t\t    .attr(\"class\", \"tooltip\")\t\t\t\t\n\t\t\t    .style(\"opacity\", 0);\n\n\t\t\t//append g element for circles and timeline axis (chart)\n\t\t\tvar g = svg.append(\"g\")\n\t\t\t\t.attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top +  \")\");\n\t\t\tthis.DrawCircles(g);\n\n\t\t\t//appends nested g for timeline axis\n\t\t\tvar chart = g.append(\"g\")\n\t\t\t\t.attr(\"class\", \"chart\")\n\t\t\t\t.attr(\"clip-path\", \"url(#chart-area)\" );\n\t\t\tthis.xAxis(chart, svg);\n\t\t},\n\n\t\tDrawCircles(g) {\n\t\t\n\t\t\t//used for positioning\n\t\t\tvar scaleFactor = (1/(this.data.maxDate - this.data.minDate)) * (this.Width - this.margin.left - this.margin.right);\n\t\t\tvar itemHeight = 20, itemMargin = 5\n\t\t\tvar Circledata = this.data.items;\n\t\t\t\n\t\t\t//issue warning about using id per data set. Ids should be individual to data elements\n\t\t\tif (typeof(this.data.id) != \"undefined\") {\n\t\t\t\tconsole.warn(\"d3Timeline Warning: Ids per dataset is deprecated in favor of a 'class' key. Ids are now per data element.\");\n\t\t\t}\n\n\t\t\t\n\t\t\t//circles\n\t\t\tg.selectAll(\"svg\").data(Circledata).enter()\n\t\t\t\t.append(\"circle\")\n\t\t\t\t.attr(\"class\", \"circle\")\n\t\t\t\t// .on(\"mouseover\", mouseover)\n\t\t\t\t// .on(\"mouseout\", mouseout)\n\t\t\t\t//for each stacked rect (contains track of circles)\n\t\t\t\t\t.attr(\"x\", getXPos.bind(this))\n\t\t\t\t\t.attr(\"y\", getYPos.bind(this))\n\t\t\t\t\t.attr(\"width\", function (d, i) { return (d.end - d.start) * .5; })\n\t\t\t\t//circles\n\t\t\t\t.attr(\"cy\", getYPos.bind(this))\n\t\t\t\t.attr(\"cx\", getXPos.bind(this))\n\t\t\t\t.attr(\"r\", itemHeight / 1.8)\n\t\t\t\t.attr(\"height\", itemHeight)\n\t\t\t\t.attr(\"fill\", function(d, i) { return d.color ; });\n\n\t\t\t\t//circle text\n\t\t\t\tg.selectAll(\"svg\").data(Circledata).enter()\n\t\t\t\t\t.append(\"text\")\n\t\t\t\t\t.on(\"mouseover\", this.mouseover.bind(this))\n\t\t\t\t\t.on(\"mouseout\", this.mouseout.bind(this))\n\t\t\t\t\t.attr(\"x\", function(d) { \n\t\t\t\t\t\t\tvar result = this.margin.left + (d.start - this.data.minDate) * scaleFactor;\n\t\t\t\t\t\t\t\tresult = result - 4.5 ;\n\t\t\t\t\t\t\t\treturn result \n\t\t\t\t\t\t\t\n\t\t\t\t\t}.bind(this))\n\t\t\t\t\t.attr(\"y\", function(d) { \n\t\t\t\t\t\tvar result = this.margin.top + (itemHeight + itemMargin) * scaleFactor ;\n\t\t\t\t\t\t\tresult = result + 5 ;\n\t\t\t\t\t\t\treturn result\n\t\t\t\t\t}.bind(this))\n\t\t\t\t\t.text(function(d) { console.log(d.label); return d.label; })\n\t\t\t\t\t.style(\"fill\", \"white\");\n\n\t\t\t//functions called by attributes\n\t\t\tfunction getYPos(d, i, text) {\n\t\t\t\tvar result = this.margin.top + (itemHeight + itemMargin) * scaleFactor ;\n\t\t\t\tif (text) { result = result + 15 };\n\t\t\t\treturn result\n\t\t\t}\n\t\t\tfunction getXPos(d, i, text) {\n\t\t\t\tvar result = this.margin.left + (d.start - this.data.minDate) * scaleFactor;\n\t\t\t\tif (text) { result = result - 4.5 };\n\t\t\t\treturn result\n\t\t\t}\n\t\t},\n\n\t\t// Create Event Handlers for mouse\n\t\tmouseover(d) {\n\t\t\td.border = \"2px solid lightgrey\"\n\t\t},\n\n\t\tmouseout(d) {\n\t\t\td.border = \"\"\n\t\t},\n\n\t\t//xAxis: create axis and axis year intervals\n\t\txAxis(chart, svg) {\n\t\t\t//create axis intervals\n\t\t\tvar xScale = d3.time.scale()\n\t\t\t\t.domain([this.data.minDate, this.data.maxDate])\n\t\t\t\t.range([0, this.Width]);\n\t\t\t//add ticks with year format\n\t\t\tvar axis = d3.svg.axis()\n\t\t\t\t.scale(xScale)\n\t\t\t\t.orient(\"bottom\")\n\t\t\t\t.tickSize(6, 0)\n\t\t\t\t.tickFormat(function (d) { return d.getUTCFullYear(); });\n\t\t\t//call and dislay axis\n\t\t\tvar xAxis = chart.append(\"g\")\n\t\t\t\t.attr(\"class\", \"axis\")\n\t\t\t\t.call(axis);\n\t\t\treturn timeline;\n\t\t},\n\t}, \n\tmounted(){\n\t\tthis.myFunction\n\t}\n}\n</script>\n\n<style type=\"text/css\" scoped>\n\t.eventText{\n\t\tfont-size: 12px;\n\t}\n</style>\n"]}]}