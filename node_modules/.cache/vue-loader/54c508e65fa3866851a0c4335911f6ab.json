{"remainingRequest":"/Users/priscilla_cancar/Documents/Websites/ap-study-bites/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/priscilla_cancar/Documents/Websites/ap-study-bites/node_modules/vuetify-loader/lib/loader.js??ref--17-0!/Users/priscilla_cancar/Documents/Websites/ap-study-bites/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/priscilla_cancar/Documents/Websites/ap-study-bites/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/Websites/ap-study-bites/src/App.vue?vue&type=template&id=7ba5bd90&scoped=true&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/Websites/ap-study-bites/src/App.vue","mtime":1603590195189},{"path":"/Users/priscilla_cancar/Documents/Websites/ap-study-bites/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/Websites/ap-study-bites/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/Websites/ap-study-bites/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/priscilla_cancar/Documents/Websites/ap-study-bites/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/Websites/ap-study-bites/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}