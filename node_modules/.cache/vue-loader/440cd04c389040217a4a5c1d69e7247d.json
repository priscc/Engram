{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/views/Adding_Content/AddTopic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/views/Adding_Content/AddTopic.vue","mtime":1593803426414},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGRiIH0gZnJvbSAnQC9tYWluJwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VsZWN0ZWRUaW1lUGVyaW9kOiAnJywKICAgICAgY3JlYXRlZFRvcGljOiB7CiAgICAgICAgdG9waWNUaXRsZTogJycsCiAgICAgICAgaW1nOiAnbG9nby5wbmcnLAogICAgICAgIHRvcGljQ29udGVudF9wdWJsaXNoZWQ6IGZhbHNlLAogICAgICAgIGNvbGxlY3Rpb25OYW1lOiAnJwogICAgICB9LAogICAgICB0aW1lUGVyaW9kc0NhdGVnb3JpZXM6IFsnUmVnaW9uYWwgSW50ZXJhY3Rpb25zIGMuMTIwMCAtIGMuMTQ1MCcsCiAgICAgICAgJ0ZpcnN0IEdsb2JhbCBBZ2UgYy4xNDUwIC0gYy4xNzUwJywKICAgICAgICAnUmV2b2x1dGlvbnMgJiBJbmR1c3RyaWFsaXphdGlvbiBjLjE3NTAtYy4xOTAwJywKICAgICAgICAnTW9kZXJuIFRpbWVzIGMuMTkwMCAtIFByZXNlbnQnXSwKICAgICAgbWVudTogZmFsc2UsCiAgICAgIHVybDogJycsCiAgICAgIHRpbWVwZXJpb2Q6IDAKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIHN1Ym1pdERhdGEgKCkgewogICAgICB0aGlzLnRpbWVwZXJpb2QgPSB0aGlzLnRpbWVQZXJpb2RzQ2F0ZWdvcmllcy5pbmRleE9mKHRoaXMuc2VsZWN0ZWRUaW1lUGVyaW9kKSArIDEKICAgICAgY29uc3QgdG9kb3NSZWYgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCcqVElNRV9QRVJJT0RTJykKICAgICAgY29uc3QgaWQgPSB0b2Rvc1JlZi5kb2MoJ3RpbWVfcGVyaW9kXycgKyB0aGlzLnRpbWVwZXJpb2QpCiAgICAgIHZhciB0b3BpY3MgPSBhd2FpdCBpZC5nZXQoKS50aGVuKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICByZXR1cm4gZG9jLmRhdGEoKS50b3BpY3MKICAgICAgfSkKICAgICAgLy8gY3JlYXRpbmcgc3BlY2lhbCBjb2xsZWN0aW9uIG5hbWUgZm9yIG5ld2x5IGFkZGVkIHRvcGljCiAgICAgIHRoaXMudXJsID0gdGhpcy5jcmVhdGVkVG9waWMudG9waWNUaXRsZS5yZXBsYWNlKC9ccysvZywgJycpLnRvTG93ZXJDYXNlKCkKICAgICAgdGhpcy5jcmVhdGVkVG9waWMuY29sbGVjdGlvbk5hbWUgPSB0aGlzLnVybAogICAgICAvLyBVUERBVElORyAqVElNRV9QRVJJT0RTIGNvbGxlY3Rpb24KICAgICAgdG9waWNzLnB1c2godGhpcy5jcmVhdGVkVG9waWMpCiAgICAgIGlkLnVwZGF0ZSh7CiAgICAgICAgdG9waWNzOiB0b3BpY3MKICAgICAgfSkKICAgICAgdGhpcy5jcmVhdGVDb2xsZWN0aW9uKCkKICAgICAgdGhpcy5hZGRUb1NlYXJjaCgpCiAgICAgIHRoaXMucmVzZXQoKQogICAgfSwKICAgIGFzeW5jIGNyZWF0ZUNvbGxlY3Rpb24gKCkgewogICAgICBkYi5kb2ModGhpcy51cmwgKyAnL0V2ZW50cycpLnNldCh7CiAgICAgICAgZXZlbnRzOiBbXQogICAgICB9KQogICAgfSwKICAgIGFzeW5jIGFkZFRvU2VhcmNoICgpIHsKICAgICAgZGIuY29sbGVjdGlvbignKlNFQVJDSCcpLmRvYygpLnNldCh7CiAgICAgICAgbmFtZTogdGhpcy5jcmVhdGVkVG9waWMudG9waWNUaXRsZSwKICAgICAgICB0eXBlb2ZDb250ZW50OiAndG9waWMnLAogICAgICAgIGNvbGxlY3Rpb25OYW1lOiB0aGlzLmNyZWF0ZWRUb3BpYy5jb2xsZWN0aW9uTmFtZSwKICAgICAgICBsb2NhdGlvbkluVElNRV9QRVJJT0RTOiB7CiAgICAgICAgICBjb2xsZWN0aW9uOiAnKlRJTUVfUEVSSU9EUycsCiAgICAgICAgICBkb2M6ICd0aW1lX3BlcmlvZF8nICsgdGhpcy50aW1lcGVyaW9kCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIHNhdmUgKGRhdGUpIHsgdGhpcy4kcmVmcy5tZW51LnNhdmUoZGF0ZSkgfSwKICAgIHZhbGlkYXRlICgpIHsgdGhpcy4kcmVmcy5mb3JtLnZhbGlkYXRlKCkgfSwKICAgIHJlc2V0ICgpIHsgdGhpcy4kcmVmcy5mb3JtLnJlc2V0KCkgfSwKICAgIHJlc2V0VmFsaWRhdGlvbiAoKSB7IHRoaXMuJHJlZnMuZm9ybS5yZXNldFZhbGlkYXRpb24oKSB9CiAgfSwKICB3YXRjaDogewogICAgbWVudSAodmFsKSB7CiAgICAgIHZhbCAmJiBzZXRUaW1lb3V0KCgpID0+ICh0aGlzLiRyZWZzLnBpY2tlci5hY3RpdmVQaWNrZXIgPSAnWUVBUicpKQogICAgfQogIH0KfQo="},{"version":3,"sources":["AddTopic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddTopic.vue","sourceRoot":"src/views/Adding_Content","sourcesContent":["<!-- Database SETUP\n1) Add topic to *TIMEPERIOD Collection\n2) Add topic TIMEPERIOD location && topic Collection info to the *SEARCH Collection\n3) Create an new Collection for the added topic -->\n\n<template>\n\t<div id=\"app\">\n\t<v-container>\n\t\t<h1 class=\"pt-5\">Add a New Topic</h1>\n\t\t<blockquote class=\"blockquote mb-3\">Fill the following form to add topics and topics to the home web page</blockquote>\n\t\t<hr>\n\t\t<div style=\"height: 50px;\"></div>\n\t\t<!-- FORM -->\n\t\t<!-- Adding Topic -->\n\t\t<v-form ref=\"form\">\n\t\t\t<v-row>\n\t\t\t\t<v-col cols=\"7\">\n\t\t\t\t\t<!-- Choose time period -->\n\t\t\t\t\t<h2 class=\"pb-4\">Time Period</h2>\n\t\t\t\t\t<v-select class=\"ml-5 pl-5\" v-model=\"selectedTimePeriod\" :items=\"timePeriodsCategories\" label=\"Choose:\" outlined >{{ timePeriodsCategories }}</v-select>\n\t\t\t\t\t<h2 class=\"pt-5 pb-4\">Topic Information</h2>\n\t\t\t\t\t<!-- enter topic name -->\n\t\t\t\t\t<v-text-field class=\"ml-5 pl-5\" label=\"Enter topic title:\" autocomplete=\"off\" v-model=\"createdTopic.topicTitle\"></v-text-field>\n\t\t\t\t\t<!-- upload image file -->\n\t\t\t\t\t<v-file-input class=\"ml-5 pl-5\" accept=\"image/*\" label=\"File input: topic icon image\"></v-file-input>\n\t\t\t\t</v-col>\n\t\t\t\t<v-spacer></v-spacer>\n\t\t\t\t<v-col cols=\"3\" class=\"d-flex align-start  flex-column\">\n\t\t\t\t\t<!-- Submit Button -->\n\t\t\t\t\t<v-btn class=\"mt-auto\" large color=\"success\" v-on:click.prevent=\"submitData\">SUBMIT</v-btn>\n\t\t\t\t\t<!-- Add Content -->\n\t\t\t\t\t<!-- <v-btn :disabled=\"createdTopic.topicTitle == '' \" class=\"mt-5\" large color=\"cyan\" style=\"color: white;\" to=\"/AddTcContent\">Add Content to Topic</v-btn> -->\n\t\t\t\t\t<!-- Reset -->\n\t\t\t\t\t<v-btn class=\"mt-5\" large outlined color=\"error\" @click=\"reset\">Reset Form</v-btn>\n\t\t\t\t</v-col>\n\t\t\t</v-row>\n\t\t</v-form>\n\t</v-container>\n\t</div>\n</template>\n\n<script>\nimport { db } from '@/main'\nexport default {\n  data: function () {\n    return {\n      selectedTimePeriod: '',\n      createdTopic: {\n        topicTitle: '',\n        img: 'logo.png',\n        topicContent_published: false,\n        collectionName: ''\n      },\n      timePeriodsCategories: ['Regional Interactions c.1200 - c.1450',\n        'First Global Age c.1450 - c.1750',\n        'Revolutions & Industrialization c.1750-c.1900',\n        'Modern Times c.1900 - Present'],\n      menu: false,\n      url: '',\n      timeperiod: 0\n    }\n  },\n  methods: {\n    async submitData () {\n      this.timeperiod = this.timePeriodsCategories.indexOf(this.selectedTimePeriod) + 1\n      const todosRef = await db.collection('*TIME_PERIODS')\n      const id = todosRef.doc('time_period_' + this.timeperiod)\n      var topics = await id.get().then(function (doc) {\n        return doc.data().topics\n      })\n      // creating special collection name for newly added topic\n      this.url = this.createdTopic.topicTitle.replace(/\\s+/g, '').toLowerCase()\n      this.createdTopic.collectionName = this.url\n      // UPDATING *TIME_PERIODS collection\n      topics.push(this.createdTopic)\n      id.update({\n        topics: topics\n      })\n      this.createCollection()\n      this.addToSearch()\n      this.reset()\n    },\n    async createCollection () {\n      db.doc(this.url + '/Events').set({\n        events: []\n      })\n    },\n    async addToSearch () {\n      db.collection('*SEARCH').doc().set({\n        name: this.createdTopic.topicTitle,\n        typeofContent: 'topic',\n        collectionName: this.createdTopic.collectionName,\n        locationInTIME_PERIODS: {\n          collection: '*TIME_PERIODS',\n          doc: 'time_period_' + this.timeperiod\n        }\n      })\n    },\n    save (date) { this.$refs.menu.save(date) },\n    validate () { this.$refs.form.validate() },\n    reset () { this.$refs.form.reset() },\n    resetValidation () { this.$refs.form.resetValidation() }\n  },\n  watch: {\n    menu (val) {\n      val && setTimeout(() => (this.$refs.picker.activePicker = 'YEAR'))\n    }\n  }\n}\n</script>\n"]}]}