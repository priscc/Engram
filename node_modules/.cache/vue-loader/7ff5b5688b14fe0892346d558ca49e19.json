{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/components/AddEvents.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/components/AddEvents.vue","mtime":1592499897988},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGRiIH0gZnJvbSAnQC9tYWluJwoKCmV4cG9ydCBkZWZhdWx0IHsKCXByb3BzOiB7CgkJdG9waWNTZWxlY3RlZDogU3RyaW5nCgl9LAoJZGF0YTogZnVuY3Rpb24gKCkgewoJCXJldHVybiB7CgkJCW1hcmtkb3duOiAnJywKCQkJdG9waWM6ICIiLAoJCQljcmVhdGVkRXZlbnQ6IHsKCQkJCWV2ZW50TmFtZTogJycsCgkJCQljb250ZW50VHlwZTogJ0V2ZW50cycsCgkJCQlldmVudFR5cGU6ICcnLAoJCQkJZXZlbnRUaXRsZTogJycsCgkJCQlkYXRlOiBudWxsLAoJCQkJY29udGVudDogJycKCQkJfSwKCQkJZXZlbnRzOiBbXSwKCQkJdHlwZU9mSW5mb3JtYXRpb246IFsnRXZlbnQnLCAnVGVybWlub2xvZ3knLCAnSGlzdG9yaWNhbCBQZW9wbGUnXSwKCQkJdHlwZU9mRXZlbnQ6IFsnQ2F1c2UnLCAnVHVybmluZyBQb2ludCcsICdFZmZlY3QnXSwKCQkJbWVudTogZmFsc2UsIAoJCQljb2xsZWN0aW9uTmFtZTogIiIsCgkJCXVybDogJycKCQl9Cgl9LAoJbWV0aG9kczogewoJCS8vU1RFUHM6CgkJCS8vIDEpIG1vdW50ZWQgbG9jYXRpbmdDb2xsZWN0aW9uKCkKCQkJLy8gMWEpIHNlYXJjaCAqU0VBUkNIIGNvbGxlY3Rpb24KCQkJLy8gMWIpIHNldCBUb3BpYyB3aGljaCBldmVudHMgd2lsbCBiZSBhZGRpbmcgdG8KCQkJLy8gMikgbW91bnRlZEV2ZW50cygpIGlzIGNhbGxlZCBieSBsb2NhdGluZ0NvbGxlY3Rpb24gLSBkaXNwbGF5cyBldmVudHMgb24gcmlnaHQKCQkJLy8gMykgd2hlbiB0aGUgc3VtYml0IGJ1dHRvbiBpcyBjbGlja2VkLCBzdWJtaXREYXRhKCkgaXMgY2FsbGVkCgkJCS8vIDNhKSBjcmVhdGVzIGluIGV2ZW50TmFtZQoJCQkvLyAzYikgdXBkYXRlIHRvcGljL0V2ZW50cy8gd2l0aCBuZXcgZXZlbnQKCQkJLy8gM2MpIHVwZGF0ZSAqU0VBUkNIIHdpdGggbmV3IGV2ZW50CgkJCS8vIDQpIG1vdW50ZWRFdmVudHMoKSBpcyBjYWxsZWQsIHVwZGF0ZSBkaXNwbGF5ZWQgZXZlbnRzIG9uIHJpZ2h0CgoJCS8vbG9jYXRpbmdDb2xsZWN0aW9uIFt3YXRlY2hlZF06IHNldHRpbmcgVG9waWMgd2hpY2ggZXZlbnRzIGFyZSBhZGRlZCB0byAmIHJlZnJlc2ggcmlnaHQgRXZlbnRzCgkJYXN5bmMgbG9jYXRpbmdDb2xsZWN0aW9uKCl7CgkJCS8vZmluZGluZyBjb2xsZWN0aW9uIG5hbWUgZnJvbSAqU0VBUkNICgkJCXZhciBpZCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oIipTRUFSQ0giKS53aGVyZSgibmFtZSIsICI9PSIgLCB0aGlzLnRvcGljU2VsZWN0ZWQpLmdldCgpLnRoZW4ocXVlcnlTbmFwc2hvdCA9PiB7CgkJCQl2YXIgeDsKCQkJCXF1ZXJ5U25hcHNob3QuZm9yRWFjaChkb2MgPT4gewoJCQkJCXggPSBkb2MuZGF0YSgpLmNvbGxlY3Rpb25OYW1lOwoJCQkJCS8vZ3JhYmJpbmcgdGhlIHRpbWVfcGVyaW9kIGl0cyBpbgoJCQkJCXZhciB5ID0gZG9jLmRhdGEoKS5sb2NhdGlvbkluVElNRV9QRVJJT0RTLmRvYzsKCQkJCQkvLyB0aGlzLnVwZGF0ZVRpbWVQZXJvaWQoeCwgeSk7CgkJCQl9KQoJCQkJcmV0dXJuIHg7CgkJCX0pOwoJCQl0aGlzLmNvbGxlY3Rpb25OYW1lID0gaWQ7CgkJCXRoaXMubW91bnRlZEV2ZW50cygpOwoJCX0sCgoJCS8vbW91bnRlZEV2ZW50czogYWRkaW5nIGV2ZW50cyB0byB0aGUgcmlnaHQKCQlhc3luYyBtb3VudGVkRXZlbnRzKCl7CgkJCXRoaXMuZXZlbnRzID0gW107CgkJCWNvbnN0IHRvZG9zUmVmID0gZGIuY29sbGVjdGlvbih0aGlzLmNvbGxlY3Rpb25OYW1lKS5kb2MoJ0V2ZW50cycpCgkJCXZhciBldmVudHMgPSBhd2FpdCB0b2Rvc1JlZi5nZXQoKS50aGVuKGZ1bmN0aW9uIChkb2MpIHsKCQkJCXZhciB4ID0gW107CgkJCQlkb2MuZGF0YSgpLmV2ZW50cy5mb3JFYWNoKGRvYyA9PiB7CgkJCQkJeC5wdXNoKGRvYyk7CgkJCQl9KQoJCQkJcmV0dXJuIHg7CgkJCX0pCgkJCXRoaXMuZXZlbnRzID0gdGhpcy5vcmdhbml6YXRpb24oZXZlbnRzKTsgLy9zb3J0IGV2ZW50cwoJCX0sCgoJCS8vc3VibWl0RGF0YTogY2FsbGVkIHdoZW4gc3VibWl0IGJ1dHRvbiBpcyBwcmVzc2VkCgkJYXN5bmMgc3VibWl0RGF0YSgpIHsKCQkJY29uc29sZS5sb2coImVoeSIpCgkJCS8vIGdyYWJiaW5nIGV2ZW50cyBjdXJyZW50bHkgd2l0aGluIHRoZSB0b3BpYwoJCQljb25zdCB1cGRhdGVFdmVudHMgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKHRoaXMuY29sbGVjdGlvbk5hbWUpLmRvYyh0aGlzLmNyZWF0ZWRFdmVudC5jb250ZW50VHlwZSk7CgkJCS8vZmlsbCBpbiBldmVudE5hbWUKCQkJdGhpcy51cmwgPSB0aGlzLmNyZWF0ZWRFdmVudC5ldmVudFRpdGxlLnJlcGxhY2UoL1xzKy9nLCcnKS50b0xvd2VyQ2FzZSgpCgkJCXRoaXMuY3JlYXRlZEV2ZW50LmV2ZW50TmFtZSA9IHRoaXMudXJsCgkJCS8vIFVQREFUSU5HIGV2ZW50cyBvZiB0b3BpYwoJCQl0aGlzLmV2ZW50cy5wdXNoKHRoaXMuY3JlYXRlZEV2ZW50KTsKCQkJdmFyIHggPSB0aGlzLm9yZ2FuaXphdGlvbih0aGlzLmV2ZW50cyk7CgkJCXVwZGF0ZUV2ZW50cy51cGRhdGUoewoJCQkJZXZlbnRzOiB4CgkJCX0pCgkJCXRoaXMubW91bnRlZEV2ZW50cygpOwoJCQl0aGlzLnVwZGF0ZVNlYXJjaCgpOwoJCQl0aGlzLnJlc2V0KCk7CgkJfSwKCgkJLy91cGRhdGVTZWFyY2g6IHVwZGF0ZXMgKlNFQVJDSCBjb2xsZWN0aW9uCgkJYXN5bmMgdXBkYXRlU2VhcmNoKCl7CgkJCWRiLmNvbGxlY3Rpb24oIipTRUFSQ0giKS5kb2MoKS5zZXQoewoJCQkJbmFtZTogdGhpcy5jcmVhdGVkRXZlbnQuZXZlbnRUaXRsZSwKCQkJCXR5cGVvZkNvbnRlbnQ6ICJldmVudCIsCgkJCQlldmVudE5hbWU6IHRoaXMuY3JlYXRlZEV2ZW50LmV2ZW50TmFtZSwKCQkJCWxvY2F0aW9uOiB7CgkJCQkJY29sbGVjdGlvbjogdGhpcy5jb2xsZWN0aW9uTmFtZSwKCQkJCQlkb2M6ICdFdmVudHMnLAoJCQkJCWRhdGFBcnI6ICdldmVudHMnCgkJCQl9CgkJCX0pCgkJfSwKCgkJLy9vcmdhbml6YXRpb246IHNvcnRzIGV2ZW50cyBieSBzdGFydCBkYXRlICYgYWRkIGJhZGdlICMgYWNjb3JkaW5nbHkKCQlvcmdhbml6YXRpb24oeCl7IAoJCQl4LnNvcnQoZnVuY3Rpb24oYSwgYikgewoJCQkJYSA9IG5ldyBEYXRlKGEuZGF0ZSkKCQkJCWIgPSBuZXcgRGF0ZShiLmRhdGUpCgkJCQlyZXR1cm4gYiAtIGE7CgkJCX0pOwoJCQl4LmZvckVhY2goKGRvYywgaSkgPT4gewoJCQkJZG9jWyJiYWRnZSJdPSBpKzE7CgkJCX0pCgkJCXJldHVybiB4OwkJCQoJCX0sCgoJCS8vdXBkYXRlVGltZVBlcm9pZDogdXBkYXRpbmcgdG9waWNDb250ZW50X3B1Ymxpc2hlZCBpZiBUb3BpYyBub3cgaGFzIGNvbnRlbnQKCQkvLyoqKipub3QgdXNlZCwgZmluZCBpZiB0aGVyZSBpcyBhIGJldHRlciB3YXkgdG8gZG8gdGhpcwoJCWFzeW5jIHVwZGF0ZVRpbWVQZXJvaWQoeCwgeSl7CgkJCXZhciBpZCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oIipUSU1FX1BFUklPRFMiKS5kb2MoeSk7CgkJCXZhciBkID0gYXdhaXQgaWQuZ2V0KCkudGhlbihxdWVyeVNuYXBzaG90ID0+IHsKCQkJCXJldHVybiBxdWVyeVNuYXBzaG90LmRhdGEoKS50b3BpY3M7CgkJCX0pOwoJCQlkLmZvckVhY2goZG9jID0+IHsKCQkJCWlmICggZG9jLmNvbGxlY3Rpb25OYW1lID09IHggKXsKCQkJCQlkb2MudG9waWNDb250ZW50X3B1Ymxpc2hlZCA9IHRydWU7CgkJCQl9CgkJCX0pCgkJCWlkLnVwZGF0ZSh7CgkJCQl0b3BpY3M6IGQKCQkJfSkKCQl9LAoKCQkvL3NhdmU6IHVzZWQgZm9yIGNhbGVuZGFyCgkJc2F2ZShkYXRlKSB7IHRoaXMuJHJlZnMubWVudS5zYXZlKGRhdGUpIH0sCgoJCS8vcmVzZXQ6IHJlc2V0cyBmb3JtCgkJcmVzZXQoKSB7IHRoaXMuJHJlZnMuZm9ybS5yZXNldCgpIH0KCX0sCgl3YXRjaDogewoJCS8vbWVudTogdXNlZCBmb3IgY2FsZW5kYXIKCQltZW51KHZhbCkgewoJCQl2YWwgJiYgc2V0VGltZW91dCgoKSA9PiAodGhpcy4kcmVmcy5waWNrZXIuYWN0aXZlUGlja2VyID0gJ1lFQVInKSkKCQl9LAoJCS8vdG9waWNTZWxlY3RlZDogbGlzdGVucyB3aGVuIFRvcGljIGlzIGNoYW5nZSwgdXBkYXRlcyBUb3BpYyBhbmQgbW91bnRlZCBldmVudHMKCQl0b3BpY1NlbGVjdGVkOiBmdW5jdGlvbih2YWwpewoJCQl0aGlzLmxvY2F0aW5nQ29sbGVjdGlvbigpOwoJCX0KCX0sCgltb3VudGVkKCl7CgkJdGhpcy5sb2NhdGluZ0NvbGxlY3Rpb24oKTsKCX0KfQo="},{"version":3,"sources":["AddEvents.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddEvents.vue","sourceRoot":"src/components","sourcesContent":["** Form: Adding Events **\n\n{ Shows Topic adding event to }\n\n(form for adding events) | (events current in Topic)\n\n****************************************************\n\n<template>\n<div id=\"app\" >\n\t<v-container>\n\t<!-- Events Header -->\n\t<v-row class=\"pt-8\">\n\t\t<v-col class=\"pb-0\" cols=\"8\">\n\t\t\t<h2 style=\"display: inline\">Adding event to: </h2>\n\t\t\t<h2 style=\"display: inline\" class=\"font-weight-light\"><u><i>{{topicSelected}}</i></u></h2>\n\t\t\t<p>** need to put validations on the form</p>\n\t\t\t<!-- Events -->\n\t\t\t<v-expansion-panels class=\"pt-1\" multiple>\n\t\t\t\t<v-expansion-panel>\n\t\t\t\t\t<v-expansion-panel-header>Events uploaded in the {{topicSelected}} </v-expansion-panel-header>\n\t\t\t\t\t<v-expansion-panel-content>\n\t\t\t\t\t\t<v-list rounded>\n\t\t\t\t\t\t\t<v-list-item class=\"box\" v-for=\"event in events\" :key=\"event.eventTitle\">\n\t\t\t\t\t\t\t\t<v-row>\n\t\t\t\t\t\t\t\t\t<v-col class=\"d-flex align-center\">\n\t\t\t\t\t\t\t\t\t\t<v-badge class=\"mt-2\" color=\"red accent-4\" :content=\"event.badge\"></v-badge>\n\t\t\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t\t\t<v-col cols=\"10 pl-0\">\n\t\t\t\t\t\t\t\t\t\t\t<p class=\"body-1\" style=\"display: inline\"><u>{{event.eventTitle}}</u></p>\n\t\t\t\t\t\t\t\t\t\t\t<p class=\"pl-3\" style=\"display: inline\">({{event.date}})</p>\n\t\t\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t\t</v-row>\n\t\t\t\t\t\t\t</v-list-item>\n\t\t\t\t\t\t</v-list>\n\t\t\t\t\t</v-expansion-panel-content>\n\t\t\t\t</v-expansion-panel>\n\t\t\t</v-expansion-panels>\n\t\t</v-col>\n\t</v-row>\n\t<!-- Add Evnet Content -->\n\t<v-container class=\"mt-6 px-6\" fluid style=\"border:1px solid black; border-radius:10px;\" >\n\t\t<v-row>\n\t\t\t<!-- FORM INPUTS-->\n\t\t\t<v-col>\n\t\t\t\t<v-form ref=\"form\">\n\n\t\t\t\t\t<!-- Event type & title -->\n\t\t\t\t\t<v-row>\n\t\t\t\t\t\t<v-col>\n\t\t\t\t\t\t\t<v-select v-model=\"createdEvent.eventType\" :items=\"typeOfEvent\" outlined label=\"Event type:\"></v-select>\n\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t<v-col cols=\"9\">\n\t\t\t\t\t\t\t<v-text-field label=\"Enter event title:\" autocomplete=\"off\" v-model=\"createdEvent.eventTitle\"></v-text-field>\n\t\t\t\t\t\t</v-col>\n\t\t\t\t\t</v-row>\n\n\t\t\t\t\t<!-- Date (calandar input) -->\n\t\t\t\t\t<v-row> \n\t\t\t\t\t\t<v-col>\n\t\t\t\t\t\t\t<v-menu  ref=\"menu\" v-model=\"menu\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y min-width=\"290px\">\n\t\t\t\t\t\t\t\t<template v-slot:activator=\"{ on }\" >\n\t\t\t\t\t\t\t\t\t<v-text-field prepend-icon=\"event\"  v-model=\"createdEvent.date\" label=\"Event Start Date\" readonly v-on=\"on\" ></v-text-field>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<v-date-picker ref=\"picker\" v-model=\"createdEvent.date\" type=\"month\" :max=\"new Date().toISOString().substr(0, 10)\" min=\"1-01-01\" @change=\"save\" ></v-date-picker>\n\t\t\t\t\t\t\t</v-menu>\n\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t<!-- <v-col> -->\n\t\t\t\t\t\t\t<!-- <v-menu  ref=\"menu\" v-model=\"menu\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y min-width=\"290px\">\n\t\t\t\t\t\t\t\t<template v-slot:activator=\"{ on }\" >\n\t\t\t\t\t\t\t\t\t<v-text-field prepend-icon=\"event\" label=\"Event End Date\" readonly v-on=\"on\" ></v-text-field>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<v-date-picker ref=\"picker\" v-model=\"createdEvent.date\" type=\"month\" :max=\"new Date().toISOString().substr(0, 10)\" min=\"1-01-01\" @change=\"save\" ></v-date-picker>\n\t\t\t\t\t\t\t</v-menu> -->\n\t\t\t\t\t\t<!-- </v-col> -->\n\t\t\t\t\t</v-row>\n\n\t\t\t\t\t<!-- Event CONTENT -->\n\t\t\t\t\t<v-row> \n\t\t\t\t\t\t<v-col>\n\t\t\t\t\t\t\tContent: <v-textarea outlined v-model=\"createdEvent.content\"  name=\"inputTextarea\" label=\"Description\"></v-textarea>\n\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t<v-col cols=\"6\" class=\"text-wrap\">\n\t\t\t\t\t\t\t<p class=\"mb-0\">Preview:</p>\n\t\t\t\t\t\t\t<div  :key=\"createdEvent.content\" v-markdown>{{createdEvent.content}}</div>\n\t\t\t\t\t\t</v-col>\n\t\t\t\t\t</v-row>\n\t\t\t\t\t<!-- Submit Button -->\n\t\t\t\t\t<v-row class=\"pt-5\">\n\t\t\t\t\t\t<v-col class=\"d-flex align-end flex-column\">\n\t\t\t\t\t\t\t<v-btn large color=\"success\" v-on:click.prevent=\"submitData\">SUBMIT</v-btn>\n\t\t\t\t\t\t\t<!-- Reset -->\n\t\t\t\t\t\t\t<v-btn class=\"mt-5\" large outlined color=\"error\" @click=\"reset\">Reset Form</v-btn>\n\t\t\t\t\t\t</v-col>\n\t\t\t\t\t</v-row>\n\t\t\t\t</v-form>\n\t\t\t</v-col>\n\t\t</v-row>\n\t</v-container>\n\t</v-container>\n</div>\n</template>\n\n<script>\nimport { db } from '@/main'\n\n\nexport default {\n\tprops: {\n\t\ttopicSelected: String\n\t},\n\tdata: function () {\n\t\treturn {\n\t\t\tmarkdown: '',\n\t\t\ttopic: \"\",\n\t\t\tcreatedEvent: {\n\t\t\t\teventName: '',\n\t\t\t\tcontentType: 'Events',\n\t\t\t\teventType: '',\n\t\t\t\teventTitle: '',\n\t\t\t\tdate: null,\n\t\t\t\tcontent: ''\n\t\t\t},\n\t\t\tevents: [],\n\t\t\ttypeOfInformation: ['Event', 'Terminology', 'Historical People'],\n\t\t\ttypeOfEvent: ['Cause', 'Turning Point', 'Effect'],\n\t\t\tmenu: false, \n\t\t\tcollectionName: \"\",\n\t\t\turl: ''\n\t\t}\n\t},\n\tmethods: {\n\t\t//STEPs:\n\t\t\t// 1) mounted locatingCollection()\n\t\t\t// 1a) search *SEARCH collection\n\t\t\t// 1b) set Topic which events will be adding to\n\t\t\t// 2) mountedEvents() is called by locatingCollection - displays events on right\n\t\t\t// 3) when the sumbit button is clicked, submitData() is called\n\t\t\t// 3a) creates in eventName\n\t\t\t// 3b) update topic/Events/ with new event\n\t\t\t// 3c) update *SEARCH with new event\n\t\t\t// 4) mountedEvents() is called, update displayed events on right\n\n\t\t//locatingCollection [wateched]: setting Topic which events are added to & refresh right Events\n\t\tasync locatingCollection(){\n\t\t\t//finding collection name from *SEARCH\n\t\t\tvar id = await db.collection(\"*SEARCH\").where(\"name\", \"==\" , this.topicSelected).get().then(querySnapshot => {\n\t\t\t\tvar x;\n\t\t\t\tquerySnapshot.forEach(doc => {\n\t\t\t\t\tx = doc.data().collectionName;\n\t\t\t\t\t//grabbing the time_period its in\n\t\t\t\t\tvar y = doc.data().locationInTIME_PERIODS.doc;\n\t\t\t\t\t// this.updateTimePeroid(x, y);\n\t\t\t\t})\n\t\t\t\treturn x;\n\t\t\t});\n\t\t\tthis.collectionName = id;\n\t\t\tthis.mountedEvents();\n\t\t},\n\n\t\t//mountedEvents: adding events to the right\n\t\tasync mountedEvents(){\n\t\t\tthis.events = [];\n\t\t\tconst todosRef = db.collection(this.collectionName).doc('Events')\n\t\t\tvar events = await todosRef.get().then(function (doc) {\n\t\t\t\tvar x = [];\n\t\t\t\tdoc.data().events.forEach(doc => {\n\t\t\t\t\tx.push(doc);\n\t\t\t\t})\n\t\t\t\treturn x;\n\t\t\t})\n\t\t\tthis.events = this.organization(events); //sort events\n\t\t},\n\n\t\t//submitData: called when submit button is pressed\n\t\tasync submitData() {\n\t\t\tconsole.log(\"ehy\")\n\t\t\t// grabbing events currently within the topic\n\t\t\tconst updateEvents = await db.collection(this.collectionName).doc(this.createdEvent.contentType);\n\t\t\t//fill in eventName\n\t\t\tthis.url = this.createdEvent.eventTitle.replace(/\\s+/g,'').toLowerCase()\n\t\t\tthis.createdEvent.eventName = this.url\n\t\t\t// UPDATING events of topic\n\t\t\tthis.events.push(this.createdEvent);\n\t\t\tvar x = this.organization(this.events);\n\t\t\tupdateEvents.update({\n\t\t\t\tevents: x\n\t\t\t})\n\t\t\tthis.mountedEvents();\n\t\t\tthis.updateSearch();\n\t\t\tthis.reset();\n\t\t},\n\n\t\t//updateSearch: updates *SEARCH collection\n\t\tasync updateSearch(){\n\t\t\tdb.collection(\"*SEARCH\").doc().set({\n\t\t\t\tname: this.createdEvent.eventTitle,\n\t\t\t\ttypeofContent: \"event\",\n\t\t\t\teventName: this.createdEvent.eventName,\n\t\t\t\tlocation: {\n\t\t\t\t\tcollection: this.collectionName,\n\t\t\t\t\tdoc: 'Events',\n\t\t\t\t\tdataArr: 'events'\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\n\t\t//organization: sorts events by start date & add badge # accordingly\n\t\torganization(x){ \n\t\t\tx.sort(function(a, b) {\n\t\t\t\ta = new Date(a.date)\n\t\t\t\tb = new Date(b.date)\n\t\t\t\treturn b - a;\n\t\t\t});\n\t\t\tx.forEach((doc, i) => {\n\t\t\t\tdoc[\"badge\"]= i+1;\n\t\t\t})\n\t\t\treturn x;\t\t\t\n\t\t},\n\n\t\t//updateTimePeroid: updating topicContent_published if Topic now has content\n\t\t//****not used, find if there is a better way to do this\n\t\tasync updateTimePeroid(x, y){\n\t\t\tvar id = await db.collection(\"*TIME_PERIODS\").doc(y);\n\t\t\tvar d = await id.get().then(querySnapshot => {\n\t\t\t\treturn querySnapshot.data().topics;\n\t\t\t});\n\t\t\td.forEach(doc => {\n\t\t\t\tif ( doc.collectionName == x ){\n\t\t\t\t\tdoc.topicContent_published = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tid.update({\n\t\t\t\ttopics: d\n\t\t\t})\n\t\t},\n\n\t\t//save: used for calendar\n\t\tsave(date) { this.$refs.menu.save(date) },\n\n\t\t//reset: resets form\n\t\treset() { this.$refs.form.reset() }\n\t},\n\twatch: {\n\t\t//menu: used for calendar\n\t\tmenu(val) {\n\t\t\tval && setTimeout(() => (this.$refs.picker.activePicker = 'YEAR'))\n\t\t},\n\t\t//topicSelected: listens when Topic is change, updates Topic and mounted events\n\t\ttopicSelected: function(val){\n\t\t\tthis.locatingCollection();\n\t\t}\n\t},\n\tmounted(){\n\t\tthis.locatingCollection();\n\t}\n}\n</script>\n\n<style type=\"text/css\">\n\t.box{\n\t\ttext-align: left;\n\t\tbackground-color: #FCE4EC;\n\t}\n</style>\n\t\t\n\n"]}]}