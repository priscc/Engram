{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/babel-loader/lib/index.js!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vuetify-loader/lib/loader.js??ref--17-0!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/components/Events/EventTemplate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/components/Events/EventTemplate.vue","mtime":1593825721902},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["EventTemplate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<v-col class=\"pl-10\">\n\t\t<v-row class=\"text-center\" id=\"eventExtend\">\n\t\t\t<!-- Causes -->\n\t\t\t<v-col class=\"pa-0\">\n\t\t\t\t<event-col :header=\"`Cause`\"  :events=\"time\"/>\n\t\t\t</v-col>\n\t\t\t<!-- line 2 -->\n\t\t\t<v-col cols=\"1\" class=\"pa-0\" style=\"max-width: 10px;\">\n\t\t\t\t<svg width=\"100%\" height=\"100%\">\n\t\t\t\t  <path d=\"M5,400 v-400\" fill=\"yellow\" stroke=\"lightgray\" stroke-width=\"1\" />\n\t\t\t\t</svg>\n\t\t\t</v-col>\n\t\t\t<!-- TP -->\n\t\t\t<v-col class=\"pa-0\">\n\t\t\t\t<event-col :header=\"`Turning Points`\" :events=\"time\"/>\n\t\t\t</v-col>\n\t\t\t<!-- line 2 -->\n\t\t\t<v-col cols=\"1\" class=\"pa-0\" style=\"max-width: 10px;\">\n\t\t\t\t<svg width=\"100%\" height=\"100%\">\n\t\t\t\t  <path d=\"M5,400 v-400\" fill=\"yellow\" stroke=\"lightgray\" stroke-width=\"1\" />\n\t\t\t\t</svg>\n\t\t\t</v-col>\n\t\t\t<!-- Effects -->\n\t\t\t<v-col class=\"pa-0\">\n\t\t\t\t<event-col :header=\"`Effect`\" :events=\"time\"/>\n\t\t\t</v-col>\n\t\t</v-row>\n\t\t<!-- <v-row>\n\t\t\t<v-btn block v-if=\"showBtn\" @click=\"extendbtn\" id=\"buttonExtend\" ><v-icon dark large>{{btntext}}</v-icon></v-btn>\n\n\t\t</v-row> -->\n\t\t<v-row class=\"py-4 timeline\" style=\"background-color: transparent; border-top: .5px dashed lightgrey\">\n\t\t\t<v-col cols=\"2\" class=\"pa-0\">\n\t\t\t\t<v-img height=\"100%\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT-ILL4LOZYbDF3-j7toq45fCjtR6RnsOr6TerzjUGBAUXfsjAz&usqp=CAU\"> </v-img>\n\t\t\t</v-col>\n\t\t\t<v-col class=\"my-auto\">\n\t\t\t\t<div id=\"timeline2\"></div>\n\t\t\t\t<div id=\"timeline\"></div>\n\t\t\t</v-col>\n\t\t</v-row>\n\t</v-col>\n</template>\n\n<script>\nimport eventCol from '@/components/Events/EventColumn.vue'\nimport { db } from '@/main'\nimport * as d3 from 'd3'\n\nexport default {\n  name: 'Topics',\n  props: {\n    causes: Array,\n    turningP: Array,\n    effects: Array,\n    header: String\n  },\n  components: {\n    eventCol\n  },\n  data () {\n    return {\n\t  \tid: this.$route.params.id,\n      sub: this.$route.params.subpage,\n\t  \textend: false,\n\t  \tshowBtn: false,\n\t  \tbtntext: 'mdi-chevron-down',\n\t  \ttime: [\n        {\n          times: [\n\n          ]\n        }\n      ],\n      data: {},\n      Width: null,\n      svg: null, // #timeline\n      chart: null, // timeline axis\n      g: null,\n      tool: null,\n      margin: { top: 20, right: 20, bottom: 20, left: 20 }\n    }\n  },\n  methods: {\n  \t\tsearchDataSets () {\n\n  \t\t},\n    async pullData () {\n      // var h = header.replace(/\\s+/g, '').toLowerCase()\n      const todosRef = db.collection(this.id).doc('Events')\n\n      var x = await todosRef.get().then(function (doc) {\n        var times = []\n        doc.data().events.forEach(doc => {\n          var x = {}\n          x.start = doc.date.slice(0, 4)\n          x.end = doc.date.slice(0, 4)\n          x.label = doc.badge.toString()\n          x.name = doc.eventTitle\n          x.type = doc.eventType\n          x.color = '#FF0000'\n          x.border = ''\n          times.push(x)\n        })\n        return times\n      })\n      this.time[0].times = x\n      this.myFunction()\n    },\n\n    myFunction () {\n      this.datA(this.time)\n      var svg = d3.select('#timeline').append('svg')\n      this.timeline(svg)\n    },\n\n    // datA: formats timeline date data, parse to start and end dates, find min and max date\n    datA (items) {\n      // grabbing data\n      var items = items[0].times\n\n      var today = new Date()\n\n      // copying data to dictionary\n      this.data.items = items\n      // forEach: parse String data to dates & clean end dates\n      this.data.items.forEach(function (item) {\n        item.start = d3.time.format('%Y').parse(item.start)\n        if (item.end == '') { // if has no end time\n          item.end = new Date(item.start.getTime() + instantOffset)\n          item.instant = true\n        } else {\n          item.end = d3.time.format('%Y').parse(item.end)\n          item.instant = false\n        }\n        // prevent timeline from going into the future\n        if (item.end > today) { item.end = today };\n      })\n      // find min and max date\n      this.data.minDate = d3.min(this.data.items, function (d) { return d.start })\n      this.data.maxDate = d3.max(this.data.items, function (d) { return d.end })\n    },\n\n    // timeline: sets svg dimension, (creates svg tag layout) adds circles then adds timeline axis\n    timeline (gParent) {\n      // cal svg elements\n      var outerWidth = 700\n      var outerHeight = 100\n      var width = outerWidth - this.margin.left - this.margin.right\n      var height = outerHeight - this.margin.top - this.margin.bottom\n      this.Width = width\n\n      // gets svg of <div #timeline>, sets dimensions\n      var div = gParent[0][0]\n      var svg = d3.select(div)\n        .attr('width', '100%')\n        .attr('height', outerHeight)\n\n      // Define the div for the tooltip\n      this.tool = d3.select('#timeline2').append('div')\n        .attr('width', '100%')\n        .attr('height', '100%')\n\t\t\t    .attr('class', 'tooltip')\n\t\t\t    .style('opacity', 0)\n\n      // append g element for circles and timeline axis (chart)\n      var g = svg.append('g')\n        .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')')\n      this.DrawCircles(g)\n\n      // appends nested g for timeline axis\n      var chart = g.append('g')\n        .attr('class', 'chart')\n        .attr('clip-path', 'url(#chart-area)')\n      this.xAxis(chart, svg)\n    },\n\n    DrawCircles (g) {\n      // used for positioning\n      var scaleFactor = (1 / (this.data.maxDate - this.data.minDate)) * (this.Width - this.margin.left - this.margin.right)\n      var itemHeight = 20; var itemMargin = 5\n      var Circledata = this.data.items\n\n      // issue warning about using id per data set. Ids should be individual to data elements\n      if (typeof (this.data.id) !== 'undefined') {\n        console.warn(\"d3Timeline Warning: Ids per dataset is deprecated in favor of a 'class' key. Ids are now per data element.\")\n      }\n\n      // circles\n      g.selectAll('svg').data(Circledata).enter()\n        .append('circle')\n        .attr('class', 'circle')\n        .attr('id', function (d) { return ('circle' + d.label) })\n        .on('mouseover', this.mouseover.bind(this))\n        .on('mouseout', this.mouseout.bind(this))\n      // for each stacked rect (contains track of circles)\n        .attr('x', getXPos.bind(this))\n        .attr('y', getYPos.bind(this))\n        .attr('width', function (d, i) { return (d.end - d.start) * 0.5 })\n      // circles\n        .attr('cy', getYPos.bind(this))\n        .attr('cx', getXPos.bind(this))\n        .attr('r', itemHeight / 1.8)\n        .attr('height', itemHeight)\n        .attr('fill', function (d, i) { return d.color })\n\n      // circle text\n      g.selectAll('svg').data(Circledata).enter()\n        .append('text')\n        .on('mouseover', this.mouseover.bind(this))\n        .on('mouseout', this.mouseout.bind(this))\n        .attr('x', function (d) {\n          var result = this.margin.left + (d.start - this.data.minDate) * scaleFactor\n          if (parseInt(d.label) > 9) result = result - 9\n          else result = result - 4.5\n          return result\n        }.bind(this))\n        .attr('y', function (d) {\n          var result = this.margin.top + (itemHeight + itemMargin) * scaleFactor\n          result = result + 5\n          return result\n        }.bind(this))\n        .text(function (d) { return d.label })\n        .style('fill', 'white')\n\n      // functions called by attributes\n      function getYPos (d, i, text) {\n        var result = this.margin.top + (itemHeight + itemMargin) * scaleFactor\n        if (text) { result = result + 15 };\n        return result\n      }\n      function getXPos (d, i, text) {\n        var result = this.margin.left + (d.start - this.data.minDate) * scaleFactor\n        if (text) { result = result - 4.5 };\n        return result\n      }\n    },\n\n    // Create Event Handlers for mouse\n    mouseover (d) {\n      d.border = '1px solid black'\n      document.getElementById('circle' + d.label).style.stroke = 'black'\n    },\n\n    mouseout (d) {\n      d.border = ''\n      document.getElementById('circle' + d.label).style.stroke = 'none'\n    },\n\n    // xAxis: create axis and axis year intervals\n    xAxis (chart, svg) {\n      // create axis intervals\n      var xScale = d3.time.scale()\n        .domain([this.data.minDate, this.data.maxDate])\n        .range([0, this.Width])\n      // add ticks with year format\n      var axis = d3.svg.axis()\n        .scale(xScale)\n        .orient('bottom')\n        .tickSize(6, 0)\n        .tickFormat(function (d) { return d.getUTCFullYear() })\n      // call and dislay axis\n      var xAxis = chart.append('g')\n        .attr('class', 'axis')\n        .call(axis)\n      return timeline\n    }\n\n  },\n  mounted () {\n    this.pullData()\n  }\n}\n</script>\n\n<style scope>\n\t.timeline{\n\t\tbackground-color: white;\n\t\topacity: 1;\n\t\tz-index: 10;\n\t}\n\tdiv.tooltip {\n\t    position: absolute;\n\t    text-align: center;\n\t    padding: 5px;\n\t    font: 12px sans-serif;\n\t    background: lightsteelblue;\n\t    border: 0px;\n\t    border-radius: 8px;\n\t    pointer-events: none;\n\t}\n\t.axis path, .axis line {\n\t\tfill: none;\n\t\tstroke: black;\n\t\tshape-rendering: crispEdges;\n\t}\n\t.axis text {\n\t\tfont-family: sans-serif;\n\t\tfont-size: 10px;\n\t}\n\t.timeline-label {\n\t\tfont-family: sans-serif;\n\t}\n\t#timeline .axis {\n\t\t/*transform: translate(0px,40px);*/\n\t\t-ms-transform: translate(0px,40px); /* IE 9 */\n\t\t-webkit-transform: translate(0px,40px); /* Safari and Chrome */\n\t\t-o-transform: translate(0px,40px); /* Opera */\n\t\t-moz-transform: translate(0px,40px); /* Firefox */\n\t}\n\t.coloredDiv {\n\t\theight: 20px;\n\t\twidth: 20px;\n\t\tfloat: left;\n\t}\n\n</style>\n"],"sourceRoot":"src/components/Events"}]}