{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/babel-loader/lib/index.js!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vuetify-loader/lib/loader.js??ref--17-0!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/components/Content_Forms/FormTemp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/src/components/Content_Forms/FormTemp.vue","mtime":1594925857859},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/priscilla_cancar/Documents/VueProjects/ap-study-bit2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9wcmlzY2lsbGFfY2FuY2FyL0RvY3VtZW50cy9WdWVQcm9qZWN0cy9hcC1zdHVkeS1iaXQyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGFkZEV2ZW50cyBmcm9tICdAL2NvbXBvbmVudHMvQ29udGVudF9Gb3Jtcy9FdmVudHNGb3JtLnZ1ZSc7CmltcG9ydCBhZGRUZXJtcyBmcm9tICdAL2NvbXBvbmVudHMvQ29udGVudF9Gb3Jtcy9UZXJtaW5vbG9neUZvcm0udnVlJzsKaW1wb3J0IHsgZGIgfSBmcm9tICdAL21haW4nOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIHRvcGljU2VsZWN0ZWQ6IFN0cmluZwogIH0sCiAgY29tcG9uZW50czogewogICAgYWRkRXZlbnRzOiBhZGRFdmVudHMsCiAgICBhZGRUZXJtczogYWRkVGVybXMKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpZDogdGhpcy4kcm91dGUucGFyYW1zLmlkLAogICAgICB0b3BpYzogJycsCiAgICAgIG1vdW50ZWRJdGVtczogW10sCiAgICAgIGNvbGxlY3Rpb25OYW1lOiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIGxvY2F0aW5nQ29sbGVjdGlvbiBbd2F0ZWNoZWRdOiBzZXR0aW5nIFRvcGljIHdoaWNoIGV2ZW50cyBhcmUgYWRkZWQgdG8gJiByZWZyZXNoIHJpZ2h0IEV2ZW50cwogICAgbG9jYXRpbmdDb2xsZWN0aW9uOiBmdW5jdGlvbiBsb2NhdGluZ0NvbGxlY3Rpb24oKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBpZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoIShfdGhpcy50b3BpY1NlbGVjdGVkICE9ICcnKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZGIuY29sbGVjdGlvbignKlNFQVJDSCcpLndoZXJlKCduYW1lJywgJz09JywgX3RoaXMudG9waWNTZWxlY3RlZCkuZ2V0KCkudGhlbihmdW5jdGlvbiAocXVlcnlTbmFwc2hvdCkgewogICAgICAgICAgICAgICAgICB2YXIgeDsKICAgICAgICAgICAgICAgICAgcXVlcnlTbmFwc2hvdC5mb3JFYWNoKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgICAgICAgICB4ID0gZG9jLmRhdGEoKS5jb2xsZWN0aW9uTmFtZTsKICAgICAgICAgICAgICAgICAgICB2YXIgeSA9IGRvYy5kYXRhKCkubG9jYXRpb25JblRJTUVfUEVSSU9EUy5kb2M7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICByZXR1cm4geDsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBpZCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpcy5jb2xsZWN0aW9uTmFtZSA9IGlkOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX3RoaXMuY29sbGVjdGlvbk5hbWUpOwoKICAgICAgICAgICAgICAgIF90aGlzLm1vdW50ZWRDb250ZW50KCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyBtb3VudGVkRXZlbnRzOiBhZGRpbmcgZXZlbnRzIHRvIHRoZSByaWdodAogICAgbW91bnRlZENvbnRlbnQ6IGZ1bmN0aW9uIG1vdW50ZWRDb250ZW50KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciB0b2Rvc1JlZjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGRiLmNvbGxlY3Rpb24oX3RoaXMyLmNvbGxlY3Rpb25OYW1lKS5kb2MoX3RoaXMyLmlkKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgdG9kb3NSZWYgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiB0b2Rvc1JlZi5nZXQoKS50aGVuKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaWQgPT0gIkV2ZW50cyIpIHJldHVybiBkb2MuZGF0YSgpLmV2ZW50cztlbHNlIHJldHVybiBkb2MuZGF0YSgpLml0ZW1zOwogICAgICAgICAgICAgICAgfS5iaW5kKF90aGlzMikpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfdGhpczIubW91bnRlZEl0ZW1zID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpczIubW91bnRlZEl0ZW1zKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoZSkgewogICAgICBjb25zb2xlLmxvZyhlKTsKICAgIH0sCiAgICAvLyBzdWJtaXREYXRhOiBjYWxsZWQgd2hlbiBzdWJtaXQgYnV0dG9uIGlzIHByZXNzZWQKICAgIHN1Ym1pdERhdGE6IGZ1bmN0aW9uIHN1Ym1pdERhdGEoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHVwZGF0ZUV2ZW50cywgeDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGRiLmNvbGxlY3Rpb24oX3RoaXMzLmNvbGxlY3Rpb25OYW1lKS5kb2MoX3RoaXMzLmNyZWF0ZWRFdmVudC5jb250ZW50VHlwZSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHVwZGF0ZUV2ZW50cyA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgLy8gZmlsbCBpbiBldmVudE5hbWUKICAgICAgICAgICAgICAgIF90aGlzMy51cmwgPSBfdGhpczMuY3JlYXRlZEV2ZW50LmV2ZW50VGl0bGUucmVwbGFjZSgvXHMrL2csICcnKS50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICAgICAgX3RoaXMzLmNyZWF0ZWRFdmVudC5ldmVudE5hbWUgPSBfdGhpczMudXJsOyAvLyBVUERBVElORyBldmVudHMgb2YgdG9waWMKCiAgICAgICAgICAgICAgICBfdGhpczMuZXZlbnRzLnB1c2goX3RoaXMzLmNyZWF0ZWRFdmVudCk7CgogICAgICAgICAgICAgICAgeCA9IF90aGlzMy5vcmdhbml6YXRpb24oX3RoaXMzLmV2ZW50cyk7CiAgICAgICAgICAgICAgICB1cGRhdGVFdmVudHMudXBkYXRlKHsKICAgICAgICAgICAgICAgICAgZXZlbnRzOiB4CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBfdGhpczMubW91bnRlZEV2ZW50cygpOwoKICAgICAgICAgICAgICAgIF90aGlzMy51cGRhdGVTZWFyY2goKTsKCiAgICAgICAgICAgICAgICBfdGhpczMucmVzZXQoKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIC8vIHRvcGljU2VsZWN0ZWQ6IGxpc3RlbnMgd2hlbiBUb3BpYyBpcyBjaGFuZ2UsIHVwZGF0ZXMgVG9waWMgYW5kIG1vdW50ZWQgZXZlbnRzCiAgICB0b3BpY1NlbGVjdGVkOiBmdW5jdGlvbiB0b3BpY1NlbGVjdGVkKHZhbCkgewogICAgICB0aGlzLmxvY2F0aW5nQ29sbGVjdGlvbigpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMubG9jYXRpbmdDb2xsZWN0aW9uKCk7CiAgfQp9Ow=="},{"version":3,"sources":["FormTemp.vue"],"names":[],"mappings":"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","sourcesContent":["** Form: Adding Events **\n\n{ Shows Topic adding event to }\n\n(form for adding events) | (events current in Topic)\n\n****************************************************\n\n<template>\n<div id=\"app\" >\n\t<!-- Events Header -->\n\t<v-row>\n\t\t<v-col class=\"pb-0\" cols=\"8\">\n\t\t\t<h2 style=\"display: inline\">Adding {{id}} to: </h2>\n\t\t\t<h2 style=\"display: inline\" class=\"font-weight-light\"><u><i>{{topicSelected}}</i></u></h2>\n\t\t\t<p>** need to put validations on the form</p>\n\t\t</v-col>\n\t</v-row>\n  <v-row v-if=\"topicSelected != ''\">\n    <v-col>\n          <add-events v-if=\"this.id == 'Events'\" :topicSelected=\"topicSelected\" :items=\"mountedItems\" @sendData=\"update\"></add-events>\n          <add-terms v-if=\"this.id == 'Terminology'\" :topicSelected=\"topicSelected\"></add-terms>\n    </v-col>\n  </v-row>\n\n\n</div>\n</template>\n\n<script>\n\nimport addEvents from '@/components/Content_Forms/EventsForm.vue'\nimport addTerms from '@/components/Content_Forms/TerminologyForm.vue'\nimport { db } from '@/main'\n\nexport default {\n  props: {\n    topicSelected: String\n  },\n  components:{\n    addEvents,\n    addTerms\n  },\n  data: function () {\n    return {\n      id: this.$route.params.id,\n      topic: '',\n      mountedItems: [],\n      collectionName: '',\n    }\n  },\n  methods: {\n\n    // locatingCollection [wateched]: setting Topic which events are added to & refresh right Events\n    async locatingCollection () {\n      // finding collection name from *SEARCH\n      if (this.topicSelected != ''){\n            var id = await db.collection('*SEARCH').where('name', '==', this.topicSelected).get().then(querySnapshot => {\n            var x\n            querySnapshot.forEach(doc => {\n              x = doc.data().collectionName\n              var y = doc.data().locationInTIME_PERIODS.doc\n            })\n            return x\n          })\n          this.collectionName = id\n          console.log(this.collectionName)\n          this.mountedContent()\n      }\n      \n    },\n\n    // mountedEvents: adding events to the right\n    async mountedContent () {\n\n      const todosRef = await db.collection(this.collectionName).doc(this.id);\n      \n      \n      this.mountedItems = await todosRef.get().then(function (doc) {\n          if (this.id == \"Events\")\n            return doc.data().events\n          else\n            return doc.data().items\n      }.bind(this))\n      console.log(this.mountedItems)\n\n    },\n\n    update(e){\n      console.log(e)\n    },\n\n\n    // submitData: called when submit button is pressed\n    async submitData () {\n      // grabbing events currently within the topic\n\n      const updateEvents = await db.collection(this.collectionName).doc(this.createdEvent.contentType)\n      // fill in eventName\n      this.url = this.createdEvent.eventTitle.replace(/\\s+/g, '').toLowerCase()\n      this.createdEvent.eventName = this.url\n      // UPDATING events of topic\n      this.events.push(this.createdEvent)\n      var x = this.organization(this.events)\n      updateEvents.update({\n        events: x\n      })\n      this.mountedEvents()\n      this.updateSearch()\n      this.reset()\n    },\n\n\n  },\n  watch: {\n    // topicSelected: listens when Topic is change, updates Topic and mounted events\n    topicSelected: function (val) {\n      this.locatingCollection()\n    }\n  },\n  mounted () {\n    this.locatingCollection()\n  }\n}\n</script>\n\n<style type=\"text/css\" scoped>\n\t.box{\n\t\ttext-align: left;\n\t\tbackground-color: #FCE4EC;\n\t}\n</style>\n"],"sourceRoot":"src/components/Content_Forms"}]}